
#include "InstructionSet.h"
#include "Instructions.h"

namespace Core
{
	InstructionSet::InstructionSet()
	{
		m_InstructionMap[0x00] = { 1, "nop" 			   , &Instructions::Instr_0x00_MISC_NOP			    };
		m_InstructionMap[0x01] = { 3, "ld bc,%hu" 		   , &Instructions::Instr_0x01_16LD_BC_e16		    };
		m_InstructionMap[0x02] = { 1, "ld [bc],a" 		   , &Instructions::Instr_0x02_8LD_BC_A			    };
		m_InstructionMap[0x03] = { 1, "inc bc" 			   , &Instructions::Instr_0x03_16ALU_INC_BC		    };
		m_InstructionMap[0x04] = { 1, "inc b" 			   , &Instructions::Instr_0x04_8ALU_INC_B		    };
		m_InstructionMap[0x05] = { 1, "dec b" 			   , &Instructions::Instr_0x05_8ALU_DEC_B		    };
		m_InstructionMap[0x06] = { 2, "ld b,%hhu" 		   , &Instructions::Instr_0x06_8LD_B_e8			    };
		m_InstructionMap[0x07] = { 1, "rlca" 			   , &Instructions::Instr_0x07_8SRB_RLCA		    };
		m_InstructionMap[0x08] = { 3, "ld [$%04x],sp" 	   , &Instructions::Instr_0x08_16LD_a16_SP		    };
		m_InstructionMap[0x09] = { 1, "add hl,bc" 		   , &Instructions::Instr_0x09_16ALU_ADD_BC		    };
		m_InstructionMap[0x0A] = { 1, "ld a,[bc]" 		   , &Instructions::Instr_0x0A_8LD_A_BC			    };
		m_InstructionMap[0x0B] = { 1, "dec bc" 			   , &Instructions::Instr_0x0B_16ALU_DEC_BC		    };
		m_InstructionMap[0x0C] = { 1, "inc c" 			   , &Instructions::Instr_0x0C_8ALU_INC_C		    };
		m_InstructionMap[0x0D] = { 1, "dec c" 			   , &Instructions::Instr_0x0D_8ALU_DEC_C		    };
		m_InstructionMap[0x0E] = { 2, "ld c,%hhu" 		   , &Instructions::Instr_0x0E_8LD_C_e8			    };
		m_InstructionMap[0x0F] = { 1, "rrca" 			   , &Instructions::Instr_0x0F_8SRB_RRCA		    };
		m_InstructionMap[0x10] = { 2, "stop" 			   , &Instructions::Instr_0x10_MISC_STOP		    };
		m_InstructionMap[0x11] = { 3, "ld de,%hu" 		   , &Instructions::Instr_0x11_16LD_DE_e16		    };
		m_InstructionMap[0x12] = { 1, "ld [de],a" 		   , &Instructions::Instr_0x12_8LD_DE_A			    };
		m_InstructionMap[0x13] = { 1, "inc de" 			   , &Instructions::Instr_0x13_16ALU_INC_DE		    };
		m_InstructionMap[0x14] = { 1, "inc d" 			   , &Instructions::Instr_0x14_8ALU_INC_D		    };
		m_InstructionMap[0x15] = { 1, "dec d" 			   , &Instructions::Instr_0x15_8ALU_DEC_D		    };
		m_InstructionMap[0x16] = { 2, "ld d,%hhu" 		   , &Instructions::Instr_0x16_8LD_D_e8			    };
		m_InstructionMap[0x17] = { 1, "rla" 			   , &Instructions::Instr_0x17_8SRB_RLA			    };
		m_InstructionMap[0x18] = { 2, "jr %+hhd" 		   , &Instructions::Instr_0x18_JPCALL_JR_e8		    };
		m_InstructionMap[0x19] = { 1, "add hl,de" 		   , &Instructions::Instr_0x19_16ALU_ADD_DE		    };
		m_InstructionMap[0x1A] = { 1, "ld a,[de]" 		   , &Instructions::Instr_0x1A_8LD_A_DE			    };
		m_InstructionMap[0x1B] = { 1, "dec de" 			   , &Instructions::Instr_0x1B_16ALU_DEC_DE		    };
		m_InstructionMap[0x1C] = { 1, "inc e" 			   , &Instructions::Instr_0x1C_8ALU_INC_E		    };
		m_InstructionMap[0x1D] = { 1, "dec e" 			   , &Instructions::Instr_0x1D_8ALU_DEC_E		    };
		m_InstructionMap[0x1E] = { 2, "ld e,%hhu" 		   , &Instructions::Instr_0x1E_8LD_E_e8			    };
		m_InstructionMap[0x1F] = { 1, "rra" 			   , &Instructions::Instr_0x1F_8SRB_RRA			    };
		m_InstructionMap[0x20] = { 2, "jr nz,%+hhd" 	   , &Instructions::Instr_0x20_JPCALL_JR_NZ_e8	    };
		m_InstructionMap[0x21] = { 3, "ld hl,%hu" 		   , &Instructions::Instr_0x21_16LD_HL_e16		    };
		m_InstructionMap[0x22] = { 1, "ld [hl+],a" 		   , &Instructions::Instr_0x22_8LD_HLINC_A		    };
		m_InstructionMap[0x23] = { 1, "inc hl" 			   , &Instructions::Instr_0x23_16ALU_INC_HL		    };
		m_InstructionMap[0x24] = { 1, "inc h" 			   , &Instructions::Instr_0x24_8ALU_INC_H		    };
		m_InstructionMap[0x25] = { 1, "dec h" 			   , &Instructions::Instr_0x25_8ALU_DEC_H		    };
		m_InstructionMap[0x26] = { 2, "ld h,%hhu" 		   , &Instructions::Instr_0x26_8LD_H_e8			    };
		m_InstructionMap[0x27] = { 1, "daa" 			   , &Instructions::Instr_0x27_8SRB_DAA			    };
		m_InstructionMap[0x28] = { 2, "jr z,%+hhd" 		   , &Instructions::Instr_0x28_JPCALL_JR_Z_e8	    };
		m_InstructionMap[0x29] = { 1, "add hl,hl" 		   , &Instructions::Instr_0x29_16ALU_ADD_HL		    };
		m_InstructionMap[0x2A] = { 1, "ld a,[hl+]" 		   , &Instructions::Instr_0x2A_8LD_A_HLINC		    };
		m_InstructionMap[0x2B] = { 1, "dec hl" 			   , &Instructions::Instr_0x2B_16ALU_DEC_HL		    };
		m_InstructionMap[0x2C] = { 1, "inc l" 			   , &Instructions::Instr_0x2C_8ALU_INC_L		    };
		m_InstructionMap[0x2D] = { 1, "dec l" 			   , &Instructions::Instr_0x2D_8ALU_DEC_L		    };
		m_InstructionMap[0x2E] = { 2, "ld l,%hhu" 		   , &Instructions::Instr_0x2E_8LD_L_e8			    };
		m_InstructionMap[0x2F] = { 1, "cpl" 			   , &Instructions::Instr_0x2F_8SRB_CPL			    };
		m_InstructionMap[0x30] = { 2, "jr nc,%+hhd" 	   , &Instructions::Instr_0x30_JPCALL_JR_NC_e8	    };
		m_InstructionMap[0x31] = { 3, "ld sp,%hu" 		   , &Instructions::Instr_0x31_16LD_SP_e16		    };
		m_InstructionMap[0x32] = { 1, "ld [hl-],a" 		   , &Instructions::Instr_0x32_8LD_HLDEC_A		    };
		m_InstructionMap[0x33] = { 1, "inc sp" 			   , &Instructions::Instr_0x33_16ALU_INC_SP		    };
		m_InstructionMap[0x34] = { 1, "inc [hl]" 		   , &Instructions::Instr_0x34_8ALU_INC_HL		    };
		m_InstructionMap[0x35] = { 1, "dec [hl]" 		   , &Instructions::Instr_0x35_8ALU_DEC_HL		    };
		m_InstructionMap[0x36] = { 2, "ld [hl],%hhu" 	   , &Instructions::Instr_0x36_8LD_HL_e8		    };
		m_InstructionMap[0x37] = { 1, "scf" 			   , &Instructions::Instr_0x37_8SRB_SCF			    };
		m_InstructionMap[0x38] = { 2, "jr c,%+hhd" 		   , &Instructions::Instr_0x38_JPCALL_JR_C_e8	    };
		m_InstructionMap[0x39] = { 1, "add hl,sp" 		   , &Instructions::Instr_0x39_16ALU_ADD_SP		    };
		m_InstructionMap[0x3A] = { 1, "ld a,[hl-]" 		   , &Instructions::Instr_0x3A_8LD_A_HLDEC		    };
		m_InstructionMap[0x3B] = { 1, "dec sp" 			   , &Instructions::Instr_0x3B_16ALU_DEC_SP		    };
		m_InstructionMap[0x3C] = { 1, "inc a" 			   , &Instructions::Instr_0x3C_8ALU_INC_A		    };
		m_InstructionMap[0x3D] = { 1, "dec a" 			   , &Instructions::Instr_0x3D_8ALU_DEC_A		    };
		m_InstructionMap[0x3E] = { 2, "ld a,%hhu" 		   , &Instructions::Instr_0x3E_8LD_A_e8			    };
		m_InstructionMap[0x3F] = { 1, "ccf" 			   , &Instructions::Instr_0x3F_8SRB_CCF			    };
		m_InstructionMap[0x40] = { 1, "ld b,b" 			   , &Instructions::Instr_0x40_8LD_B_B			    };
		m_InstructionMap[0x41] = { 1, "ld b,c" 			   , &Instructions::Instr_0x41_8LD_B_C			    };
		m_InstructionMap[0x42] = { 1, "ld b,d" 			   , &Instructions::Instr_0x42_8LD_B_D			    };
		m_InstructionMap[0x43] = { 1, "ld b,e" 			   , &Instructions::Instr_0x43_8LD_B_E			    };
		m_InstructionMap[0x44] = { 1, "ld b,h" 			   , &Instructions::Instr_0x44_8LD_B_H			    };
		m_InstructionMap[0x45] = { 1, "ld b,l" 			   , &Instructions::Instr_0x45_8LD_B_L			    };
		m_InstructionMap[0x46] = { 1, "ld b,[hl]" 		   , &Instructions::Instr_0x46_8LD_B_HL			    };
		m_InstructionMap[0x47] = { 1, "ld b,a" 			   , &Instructions::Instr_0x47_8LD_B_A			    };
		m_InstructionMap[0x48] = { 1, "ld c,b" 			   , &Instructions::Instr_0x48_8LD_C_B			    };
		m_InstructionMap[0x49] = { 1, "ld c,c" 			   , &Instructions::Instr_0x49_8LD_C_C			    };
		m_InstructionMap[0x4A] = { 1, "ld c,d" 			   , &Instructions::Instr_0x4A_8LD_C_D			    };
		m_InstructionMap[0x4B] = { 1, "ld c,e" 			   , &Instructions::Instr_0x4B_8LD_C_E			    };
		m_InstructionMap[0x4C] = { 1, "ld c,h" 			   , &Instructions::Instr_0x4C_8LD_C_H			    };
		m_InstructionMap[0x4D] = { 1, "ld c,l" 			   , &Instructions::Instr_0x4D_8LD_C_L			    };
		m_InstructionMap[0x4E] = { 1, "ld c,[hl]" 		   , &Instructions::Instr_0x4E_8LD_C_HL			    };
		m_InstructionMap[0x4F] = { 1, "ld c,a" 			   , &Instructions::Instr_0x4F_8LD_C_A			    };
		m_InstructionMap[0x50] = { 1, "ld d,b" 			   , &Instructions::Instr_0x50_8LD_D_B			    };
		m_InstructionMap[0x51] = { 1, "ld d,c" 			   , &Instructions::Instr_0x51_8LD_D_C			    };
		m_InstructionMap[0x52] = { 1, "ld d,d" 			   , &Instructions::Instr_0x52_8LD_D_D			    };
		m_InstructionMap[0x53] = { 1, "ld d,e" 			   , &Instructions::Instr_0x53_8LD_D_E			    };
		m_InstructionMap[0x54] = { 1, "ld d,h" 			   , &Instructions::Instr_0x54_8LD_D_H			    };
		m_InstructionMap[0x55] = { 1, "ld d,l" 			   , &Instructions::Instr_0x55_8LD_D_L			    };
		m_InstructionMap[0x56] = { 1, "ld d,[hl]" 		   , &Instructions::Instr_0x56_8LD_D_HL			    };
		m_InstructionMap[0x57] = { 1, "ld d,a" 			   , &Instructions::Instr_0x57_8LD_D_A			    };
		m_InstructionMap[0x58] = { 1, "ld e,b" 			   , &Instructions::Instr_0x58_8LD_E_B			    };
		m_InstructionMap[0x59] = { 1, "ld e,c" 			   , &Instructions::Instr_0x59_8LD_E_C			    };
		m_InstructionMap[0x5A] = { 1, "ld e,d" 			   , &Instructions::Instr_0x5A_8LD_E_D			    };
		m_InstructionMap[0x5B] = { 1, "ld e,e" 			   , &Instructions::Instr_0x5B_8LD_E_E			    };
		m_InstructionMap[0x5C] = { 1, "ld e,h" 			   , &Instructions::Instr_0x5C_8LD_E_H			    };
		m_InstructionMap[0x5D] = { 1, "ld e,l" 			   , &Instructions::Instr_0x5D_8LD_E_L			    };
		m_InstructionMap[0x5E] = { 1, "ld e,[hl]" 		   , &Instructions::Instr_0x5E_8LD_E_HL			    };
		m_InstructionMap[0x5F] = { 1, "ld e,a" 			   , &Instructions::Instr_0x5F_8LD_E_A			    };
		m_InstructionMap[0x60] = { 1, "ld h,b" 			   , &Instructions::Instr_0x60_8LD_H_B			    };
		m_InstructionMap[0x61] = { 1, "ld h,c" 			   , &Instructions::Instr_0x61_8LD_H_C			    };
		m_InstructionMap[0x62] = { 1, "ld h,d" 			   , &Instructions::Instr_0x62_8LD_H_D			    };
		m_InstructionMap[0x63] = { 1, "ld h,e" 			   , &Instructions::Instr_0x63_8LD_H_E			    };
		m_InstructionMap[0x64] = { 1, "ld h,h" 			   , &Instructions::Instr_0x64_8LD_H_H			    };
		m_InstructionMap[0x65] = { 1, "ld h,l" 			   , &Instructions::Instr_0x65_8LD_H_L			    };
		m_InstructionMap[0x66] = { 1, "ld h,[hl]" 		   , &Instructions::Instr_0x66_8LD_H_HL			    };
		m_InstructionMap[0x67] = { 1, "ld h,a" 			   , &Instructions::Instr_0x67_8LD_H_A			    };
		m_InstructionMap[0x68] = { 1, "ld l,b" 			   , &Instructions::Instr_0x68_8LD_L_B			    };
		m_InstructionMap[0x69] = { 1, "ld l,c" 			   , &Instructions::Instr_0x69_8LD_L_C			    };
		m_InstructionMap[0x6A] = { 1, "ld l,d" 			   , &Instructions::Instr_0x6A_8LD_L_D			    };
		m_InstructionMap[0x6B] = { 1, "ld l,e" 			   , &Instructions::Instr_0x6B_8LD_L_E			    };
		m_InstructionMap[0x6C] = { 1, "ld l,h" 			   , &Instructions::Instr_0x6C_8LD_L_H			    };
		m_InstructionMap[0x6D] = { 1, "ld l,l" 			   , &Instructions::Instr_0x6D_8LD_L_L			    };
		m_InstructionMap[0x6E] = { 1, "ld l,[hl]" 		   , &Instructions::Instr_0x6E_8LD_L_HL			    };
		m_InstructionMap[0x6F] = { 1, "ld l,a" 			   , &Instructions::Instr_0x6F_8LD_L_A			    };
		m_InstructionMap[0x70] = { 1, "ld [hl],b" 		   , &Instructions::Instr_0x70_8LD_HL_B			    };
		m_InstructionMap[0x71] = { 1, "ld [hl],c" 		   , &Instructions::Instr_0x71_8LD_HL_C			    };
		m_InstructionMap[0x72] = { 1, "ld [hl],d" 		   , &Instructions::Instr_0x72_8LD_HL_D			    };
		m_InstructionMap[0x73] = { 1, "ld [hl],e" 		   , &Instructions::Instr_0x73_8LD_HL_E			    };
		m_InstructionMap[0x74] = { 1, "ld [hl],h" 		   , &Instructions::Instr_0x74_8LD_HL_H			    };
		m_InstructionMap[0x75] = { 1, "ld [hl],l" 		   , &Instructions::Instr_0x75_8LD_HL_L			    };
		m_InstructionMap[0x76] = { 1, "halt" 			   , &Instructions::Instr_0x76_MISC_HALT		    };
		m_InstructionMap[0x77] = { 1, "ld [hl],a" 		   , &Instructions::Instr_0x77_8LD_HL_A			    };
		m_InstructionMap[0x78] = { 1, "ld a,b" 			   , &Instructions::Instr_0x78_8LD_A_B			    };
		m_InstructionMap[0x79] = { 1, "ld a,c" 			   , &Instructions::Instr_0x79_8LD_A_C			    };
		m_InstructionMap[0x7A] = { 1, "ld a,d" 			   , &Instructions::Instr_0x7A_8LD_A_D			    };
		m_InstructionMap[0x7B] = { 1, "ld a,e" 			   , &Instructions::Instr_0x7B_8LD_A_E			    };
		m_InstructionMap[0x7C] = { 1, "ld a,h" 			   , &Instructions::Instr_0x7C_8LD_A_H			    };
		m_InstructionMap[0x7D] = { 1, "ld a,l" 			   , &Instructions::Instr_0x7D_8LD_A_L			    };
		m_InstructionMap[0x7E] = { 1, "ld a,[hl]" 		   , &Instructions::Instr_0x7E_8LD_A_HL			    };
		m_InstructionMap[0x7F] = { 1, "ld a,a" 			   , &Instructions::Instr_0x7F_8LD_A_A			    };
		m_InstructionMap[0x80] = { 1, "add a,b" 		   , &Instructions::Instr_0x80_8ALU_ADD_B		    };
		m_InstructionMap[0x81] = { 1, "add a,c" 		   , &Instructions::Instr_0x81_8ALU_ADD_C		    };
		m_InstructionMap[0x82] = { 1, "add a,d" 		   , &Instructions::Instr_0x82_8ALU_ADD_D		    };
		m_InstructionMap[0x83] = { 1, "add a,e" 		   , &Instructions::Instr_0x83_8ALU_ADD_E		    };
		m_InstructionMap[0x84] = { 1, "add a,h" 		   , &Instructions::Instr_0x84_8ALU_ADD_H		    };
		m_InstructionMap[0x85] = { 1, "add a,l" 		   , &Instructions::Instr_0x85_8ALU_ADD_L		    };
		m_InstructionMap[0x86] = { 1, "add a,[hl]" 		   , &Instructions::Instr_0x86_8ALU_ADD_HL		    };
		m_InstructionMap[0x87] = { 1, "add a,a" 		   , &Instructions::Instr_0x87_8ALU_ADD_A		    };
		m_InstructionMap[0x88] = { 1, "adc a,b" 		   , &Instructions::Instr_0x88_8ALU_ADC_B		    };
		m_InstructionMap[0x89] = { 1, "adc a,c" 		   , &Instructions::Instr_0x89_8ALU_ADC_C		    };
		m_InstructionMap[0x8A] = { 1, "adc a,d" 		   , &Instructions::Instr_0x8A_8ALU_ADC_D		    };
		m_InstructionMap[0x8B] = { 1, "adc a,e" 		   , &Instructions::Instr_0x8B_8ALU_ADC_E		    };
		m_InstructionMap[0x8C] = { 1, "adc a,h" 		   , &Instructions::Instr_0x8C_8ALU_ADC_H		    };
		m_InstructionMap[0x8D] = { 1, "adc a,l" 		   , &Instructions::Instr_0x8D_8ALU_ADC_L		    };
		m_InstructionMap[0x8E] = { 1, "adc a,[hl]" 		   , &Instructions::Instr_0x8E_8ALU_ADC_HL		    };
		m_InstructionMap[0x8F] = { 1, "adc a,a" 		   , &Instructions::Instr_0x8F_8ALU_ADC_A		    };
		m_InstructionMap[0x90] = { 1, "sub a,b" 		   , &Instructions::Instr_0x90_8ALU_SUB_B		    };
		m_InstructionMap[0x91] = { 1, "sub a,c" 		   , &Instructions::Instr_0x91_8ALU_SUB_C		    };
		m_InstructionMap[0x92] = { 1, "sub a,d" 		   , &Instructions::Instr_0x92_8ALU_SUB_D		    };
		m_InstructionMap[0x93] = { 1, "sub a,e" 		   , &Instructions::Instr_0x93_8ALU_SUB_E		    };
		m_InstructionMap[0x94] = { 1, "sub a,h" 		   , &Instructions::Instr_0x94_8ALU_SUB_H		    };
		m_InstructionMap[0x95] = { 1, "sub a,l" 		   , &Instructions::Instr_0x95_8ALU_SUB_L		    };
		m_InstructionMap[0x96] = { 1, "sub a,[hl]" 		   , &Instructions::Instr_0x96_8ALU_SUB_HL		    };
		m_InstructionMap[0x97] = { 1, "sub a,a" 		   , &Instructions::Instr_0x97_8ALU_SUB_A		    };
		m_InstructionMap[0x98] = { 1, "sbc a,b" 		   , &Instructions::Instr_0x98_8ALU_SBC_B		    };
		m_InstructionMap[0x99] = { 1, "sbc a,c" 		   , &Instructions::Instr_0x99_8ALU_SBC_D		    };
		m_InstructionMap[0x9A] = { 1, "sbc a,d" 		   , &Instructions::Instr_0x9A_8ALU_SBC_D		    };
		m_InstructionMap[0x9B] = { 1, "sbc a,e" 		   , &Instructions::Instr_0x9B_8ALU_SBC_E		    };
		m_InstructionMap[0x9C] = { 1, "sbc a,h" 		   , &Instructions::Instr_0x9C_8ALU_SBC_H		    };
		m_InstructionMap[0x9D] = { 1, "sbc a,l" 		   , &Instructions::Instr_0x9D_8ALU_SBC_L		    };
		m_InstructionMap[0x9E] = { 1, "sbc a,[hl]" 		   , &Instructions::Instr_0x9E_8ALU_SBC_HL		    };
		m_InstructionMap[0x9F] = { 1, "sbc a,a" 		   , &Instructions::Instr_0x9F_8ALU_SBC_A		    };
		m_InstructionMap[0xA0] = { 1, "and a,b" 		   , &Instructions::Instr_0xA0_8ALU_AND_B		    };
		m_InstructionMap[0xA1] = { 1, "and a,c" 		   , &Instructions::Instr_0xA1_8ALU_AND_C		    };
		m_InstructionMap[0xA2] = { 1, "and a,d" 		   , &Instructions::Instr_0xA2_8ALU_AND_D		    };
		m_InstructionMap[0xA3] = { 1, "and a,e" 		   , &Instructions::Instr_0xA3_8ALU_AND_E		    };
		m_InstructionMap[0xA4] = { 1, "and a,h" 		   , &Instructions::Instr_0xA4_8ALU_AND_H		    };
		m_InstructionMap[0xA5] = { 1, "and a,l" 		   , &Instructions::Instr_0xA5_8ALU_AND_L		    };
		m_InstructionMap[0xA6] = { 1, "and a,[hl]" 		   , &Instructions::Instr_0xA6_8ALU_AND_HL		    };
		m_InstructionMap[0xA7] = { 1, "and a,a" 		   , &Instructions::Instr_0xA7_8ALU_AND_A		    };
		m_InstructionMap[0xA8] = { 1, "xor a,b" 		   , &Instructions::Instr_0xA8_8ALU_XOR_B		    };
		m_InstructionMap[0xA9] = { 1, "xor a,c" 		   , &Instructions::Instr_0xA9_8ALU_XOR_C		    };
		m_InstructionMap[0xAA] = { 1, "xor a,d" 		   , &Instructions::Instr_0xAA_8ALU_XOR_D		    };
		m_InstructionMap[0xAB] = { 1, "xor a,e" 		   , &Instructions::Instr_0xAB_8ALU_XOR_E		    };
		m_InstructionMap[0xAC] = { 1, "xor a,h" 		   , &Instructions::Instr_0xAC_8ALU_XOR_H		    };
		m_InstructionMap[0xAD] = { 1, "xor a,l" 		   , &Instructions::Instr_0xAD_8ALU_XOR_L		    };
		m_InstructionMap[0xAE] = { 1, "xor a,[hl]" 		   , &Instructions::Instr_0xAE_8ALU_XOR_HL		    };
		m_InstructionMap[0xAF] = { 1, "xor a,a" 		   , &Instructions::Instr_0xAF_8ALU_XOR_A		    };
		m_InstructionMap[0xB0] = { 1, "or a,b" 			   , &Instructions::Instr_0xB0_8ALU_OR_B		    };
		m_InstructionMap[0xB1] = { 1, "or a,c" 			   , &Instructions::Instr_0xB1_8ALU_OR_C		    };
		m_InstructionMap[0xB2] = { 1, "or a,d" 			   , &Instructions::Instr_0xB2_8ALU_OR_D		    };
		m_InstructionMap[0xB3] = { 1, "or a,e" 			   , &Instructions::Instr_0xB3_8ALU_OR_E		    };
		m_InstructionMap[0xB4] = { 1, "or a,h" 			   , &Instructions::Instr_0xB4_8ALU_OR_H		    };
		m_InstructionMap[0xB5] = { 1, "or a,l" 			   , &Instructions::Instr_0xB5_8ALU_OR_L		    };
		m_InstructionMap[0xB6] = { 1, "or a,[hl]" 		   , &Instructions::Instr_0xB6_8ALU_OR_HL		    };
		m_InstructionMap[0xB7] = { 1, "or a,a" 			   , &Instructions::Instr_0xB7_8ALU_OR_A		    };
		m_InstructionMap[0xB8] = { 1, "cp a,b" 			   , &Instructions::Instr_0xB8_8ALU_CP_B		    };
		m_InstructionMap[0xB9] = { 1, "cp a,c" 			   , &Instructions::Instr_0xB9_8ALU_CP_C		    };
		m_InstructionMap[0xBA] = { 1, "cp a,d" 			   , &Instructions::Instr_0xBA_8ALU_CP_D		    };
		m_InstructionMap[0xBB] = { 1, "cp a,e" 			   , &Instructions::Instr_0xBB_8ALU_CP_E		    };
		m_InstructionMap[0xBC] = { 1, "cp a,h" 			   , &Instructions::Instr_0xBC_8ALU_CP_H		    };
		m_InstructionMap[0xBD] = { 1, "cp a,l" 			   , &Instructions::Instr_0xBD_8ALU_CP_L		    };
		m_InstructionMap[0xBE] = { 1, "cp a,[hl]" 		   , &Instructions::Instr_0xBE_8ALU_CP_HL		    };
		m_InstructionMap[0xBF] = { 1, "cp a,a" 			   , &Instructions::Instr_0xBF_8ALU_CP_A		    };
		m_InstructionMap[0xC0] = { 1, "ret nz" 			   , &Instructions::Instr_0xC0_JPCALL_RET_NZ	    };
		m_InstructionMap[0xC1] = { 1, "pop bc" 			   , &Instructions::Instr_0xC1_16LD_POP_BC		    };
		m_InstructionMap[0xC2] = { 3, "jp nz,$%04hx" 	   , &Instructions::Instr_0xC2_JPCALL_JP_NZ_a16	    };
		m_InstructionMap[0xC3] = { 3, "jp $%04hx" 		   , &Instructions::Instr_0xC3_JPCALL_JP_a16	    };
		m_InstructionMap[0xC4] = { 3, "call nz,$%04hx" 	   , &Instructions::Instr_0xC4_JPCALL_CALL_NZ_a16   };
		m_InstructionMap[0xC5] = { 1, "push bc" 		   , &Instructions::Instr_0xC5_16LD_PUSH_BC		    };
		m_InstructionMap[0xC6] = { 2, "add a,%hhu" 		   , &Instructions::Instr_0xC6_8ALU_ADD_e8		    };
		m_InstructionMap[0xC7] = { 1, "rst $00" 		   , &Instructions::Instr_0xC7_JPCALL_RST_00	    };
		m_InstructionMap[0xC8] = { 1, "ret z" 			   , &Instructions::Instr_0xC8_JPCALL_RET_Z		    };
		m_InstructionMap[0xC9] = { 1, "ret" 			   , &Instructions::Instr_0xC9_JPCALL_RET		    };
		m_InstructionMap[0xCA] = { 3, "jp z,$%04hx" 	   , &Instructions::Instr_0xCA_JPCALL_JP_Z_a16	    };
		m_InstructionMap[0xCB] = { 2, "INVALID" 		   , &Instructions::Instr_0xCB_MISC_PREFIX		    };
		m_InstructionMap[0xCC] = { 3, "call z,$%04hx" 	   , &Instructions::Instr_0xCC_JPCALL_CALL_Z_a16    };
		m_InstructionMap[0xCD] = { 3, "call $%04hx" 	   , &Instructions::Instr_0xCD_JPCALL_CALL_a16	    };
		m_InstructionMap[0xCE] = { 2, "adc a,%hhu" 		   , &Instructions::Instr_0xCE_8ALU_ADC_e8		    };
		m_InstructionMap[0xCF] = { 1, "rst $08" 		   , &Instructions::Instr_0xCF_JPCALL_RST_08	    };
		m_InstructionMap[0xD0] = { 1, "ret nc" 			   , &Instructions::Instr_0xD0_JPCALL_RET_NC	    };
		m_InstructionMap[0xD1] = { 1, "pop de" 			   , &Instructions::Instr_0xD1_16LD_POP_DE		    };
		m_InstructionMap[0xD2] = { 3, "jp nc,$%04hx" 	   , &Instructions::Instr_0xD2_JPCALL_JP_NC_a16	    };
		m_InstructionMap[0xD3] = { 1, "INVALID" 		   , &Instructions::Instr_0xFF_JPCALL_RST_38	    };
		m_InstructionMap[0xD4] = { 3, "call nc,$%04hx" 	   , &Instructions::Instr_0xD4_JPCALL_VALL_NC_a16   };
		m_InstructionMap[0xD5] = { 1, "push de" 		   , &Instructions::Instr_0xD5_16LD_PUSH_DE		    };
		m_InstructionMap[0xD6] = { 2, "sub a,%hhu" 		   , &Instructions::Instr_0xD6_8ALU_SUB_e8		    };
		m_InstructionMap[0xD7] = { 1, "rst $10" 		   , &Instructions::Instr_0xD7_JPCALL_RST_10	    };
		m_InstructionMap[0xD8] = { 1, "ret c" 			   , &Instructions::Instr_0xD8_JPCALL_RET_C		    };
		m_InstructionMap[0xD9] = { 1, "reti" 			   , &Instructions::Instr_0xD9_JPCALL_RETI		    };
		m_InstructionMap[0xDA] = { 3, "jp c,$%04hx" 	   , &Instructions::Instr_0xDA_JPCALL_JP_C_a16	    };
		m_InstructionMap[0xDB] = { 1, "INVALID" 		   , &Instructions::Instr_0xFF_JPCALL_RST_38	    };
		m_InstructionMap[0xDC] = { 3, "call c,$%04hx" 	   , &Instructions::Instr_0xDC_JPCALL_CALL_C_a16    };
		m_InstructionMap[0xDD] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xDE] = { 2, "sbc a,%hhu" 		   , &Instructions::Instr_0xDE_8ALU_SBC_e8		    };
		m_InstructionMap[0xDF] = { 1, "rst $18" 		   , &Instructions::Instr_0xDF_JPCALL_RST_18	    };
		m_InstructionMap[0xE0] = { 2, "ldh [$ff%02hhx],a"  , &Instructions::Instr_0xE0_8LD_a8_A			    };
		m_InstructionMap[0xE1] = { 1, "pop hl" 			   , &Instructions::Instr_0xE1_16LD_POP_HL		    };
		m_InstructionMap[0xE2] = { 1, "ld [$ff00+c],a" 	   , &Instructions::Instr_0xE2_8LD_CADDR_A		    };
		m_InstructionMap[0xE3] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xE4] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xE5] = { 1, "push hl" 		   , &Instructions::Instr_0xE5_16LD_PUSH_DL		    };
		m_InstructionMap[0xE6] = { 2, "and a,%hhu" 		   , &Instructions::Instr_0xE6_8ALU_AND_e8		    };
		m_InstructionMap[0xE7] = { 1, "rst $20" 		   , &Instructions::Instr_0xE7_JPCALL_RST_20	    };
		m_InstructionMap[0xE8] = { 2, "add sp,%+hhd" 	   , &Instructions::Instr_0xE8_16ALU_ADD_SP_e8	    };
		m_InstructionMap[0xE9] = { 1, "jp hl" 			   , &Instructions::Instr_0xE9_JPCALL_JP_HL		    };
		m_InstructionMap[0xEA] = { 3, "ld [$%04hx],a" 	   , &Instructions::Instr_0xEA_8LD_a16_A		    };
		m_InstructionMap[0xEB] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xEC] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xED] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xEE] = { 2, "xor a,%hhu" 		   , &Instructions::Instr_0xEE_8ALU_XOR_e8		    };
		m_InstructionMap[0xEF] = { 1, "rst $28" 		   , &Instructions::Instr_0xEF_JPCALL_RST_28	    };
		m_InstructionMap[0xF0] = { 2, "ldh a,[$ff%02hhx]"  , &Instructions::Instr_0xF0_8LD_A_a8			    };
		m_InstructionMap[0xF1] = { 1, "pop af" 			   , &Instructions::Instr_0xF1_16LD_POP_AF		    };
		m_InstructionMap[0xF2] = { 1, "ld a,[$ff00+c]" 	   , &Instructions::Instr_0xF2_8LD_A_CADDR		    };
		m_InstructionMap[0xF3] = { 1, "di" 				   , &Instructions::Instr_0xF3_MISC_DI			    };
		m_InstructionMap[0xF4] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xF5] = { 1, "push af" 		   , &Instructions::Instr_0xF5_16LD_PUSH_AF		    };
		m_InstructionMap[0xF6] = { 2, "or a,%hhu" 		   , &Instructions::Instr_0xF6_8ALU_OR_e8		    };
		m_InstructionMap[0xF7] = { 1, "rst $30" 		   , &Instructions::Instr_0xF7_JPCALL_RST_30	    };
		m_InstructionMap[0xF8] = { 2, "ld hl,sp%+hhd" 	   , &Instructions::Instr_0xF8_16LD_SP_e8		    };
		m_InstructionMap[0xF9] = { 1, "ld sp,hl" 		   , &Instructions::Instr_0xF9_16LD_SP_HL		    };
		m_InstructionMap[0xFA] = { 3, "ld a,[$%04hx]" 	   , &Instructions::Instr_0xFA_8LD_A_a16		    };
		m_InstructionMap[0xFB] = { 1, "ei" 				   , &Instructions::Instr_0xFB_MISC_IE			    };
		m_InstructionMap[0xFC] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xFD] = { 1, "INVALID" 		   , &Instructions::Instr_INVALID				    };
		m_InstructionMap[0xFE] = { 2, "cp a,%hhu" 		   , &Instructions::Instr_0xFE_8ALU_CP_e8		    };
		m_InstructionMap[0xFF] = { 1, "rst $38" 		   , &Instructions::Instr_0xFF_JPCALL_RST_38	    };


		m_16BitInstructionMap[0x00] = { 2, "rlc b"		   , &Instructions::Instr_16_0xCB00_RLC_B           };
		m_16BitInstructionMap[0x01] = { 2, "rlc c"		   , &Instructions::Instr_16_0xCB01_RLC_C   		};
		m_16BitInstructionMap[0x02] = { 2, "rlc d"		   , &Instructions::Instr_16_0xCB02_RLC_D   		};
		m_16BitInstructionMap[0x03] = { 2, "rlc e"		   , &Instructions::Instr_16_0xCB03_RLC_E   		};
		m_16BitInstructionMap[0x04] = { 2, "rlc h"		   , &Instructions::Instr_16_0xCB04_RLC_H   		};
		m_16BitInstructionMap[0x05] = { 2, "rlc l"		   , &Instructions::Instr_16_0xCB05_RLC_L   		};
		m_16BitInstructionMap[0x06] = { 2, "rlc [hl]"	   , &Instructions::Instr_16_0xCB06_RLC_HL  		};
		m_16BitInstructionMap[0x07] = { 2, "rlc a"		   , &Instructions::Instr_16_0xCB07_RLC_A   		};
		m_16BitInstructionMap[0x08] = { 2, "rrc b"		   , &Instructions::Instr_16_0xCB08_RRC_B   		};
		m_16BitInstructionMap[0x09] = { 2, "rrc c"		   , &Instructions::Instr_16_0xCB09_RRC_C   		};
		m_16BitInstructionMap[0x0A] = { 2, "rrc d"		   , &Instructions::Instr_16_0xCB0A_RRC_D   		};
		m_16BitInstructionMap[0x0B] = { 2, "rrc e"		   , &Instructions::Instr_16_0xCB0B_RRC_E   		};
		m_16BitInstructionMap[0x0C] = { 2, "rrc h"		   , &Instructions::Instr_16_0xCB0C_RRC_H   		};
		m_16BitInstructionMap[0x0D] = { 2, "rrc l"		   , &Instructions::Instr_16_0xCB0D_RRC_L   		};
		m_16BitInstructionMap[0x0E] = { 2, "rrc [hl]"	   , &Instructions::Instr_16_0xCB0E_RRC_HL  		};
		m_16BitInstructionMap[0x0F] = { 2, "rrc a"		   , &Instructions::Instr_16_0xCB0F_RRC_A 			};
		m_16BitInstructionMap[0x10] = { 2, "rl b"		   , &Instructions::Instr_16_0xCB10_RL_B  			};
		m_16BitInstructionMap[0x11] = { 2, "rl c"		   , &Instructions::Instr_16_0xCB11_RL_C  			};
		m_16BitInstructionMap[0x12] = { 2, "rl d"		   , &Instructions::Instr_16_0xCB12_RL_D  			};
		m_16BitInstructionMap[0x13] = { 2, "rl e"		   , &Instructions::Instr_16_0xCB13_RL_E  			};
		m_16BitInstructionMap[0x14] = { 2, "rl h"		   , &Instructions::Instr_16_0xCB14_RL_H  			};
		m_16BitInstructionMap[0x15] = { 2, "rl l"		   , &Instructions::Instr_16_0xCB15_RL_L  			};
		m_16BitInstructionMap[0x16] = { 2, "rl [hl]"	   , &Instructions::Instr_16_0xCB16_RL_HL 			};
		m_16BitInstructionMap[0x17] = { 2, "rl a"		   , &Instructions::Instr_16_0xCB17_RL_A  			};
		m_16BitInstructionMap[0x18] = { 2, "rr b"		   , &Instructions::Instr_16_0xCB18_RR_B  			};
		m_16BitInstructionMap[0x19] = { 2, "rr c"		   , &Instructions::Instr_16_0xCB19_RR_C  			};
		m_16BitInstructionMap[0x1A] = { 2, "rr d"		   , &Instructions::Instr_16_0xCB1A_RR_D  			};
		m_16BitInstructionMap[0x1B] = { 2, "rr e"		   , &Instructions::Instr_16_0xCB1B_RR_E  			};
		m_16BitInstructionMap[0x1C] = { 2, "rr h"		   , &Instructions::Instr_16_0xCB1C_RR_H  			};
		m_16BitInstructionMap[0x1D] = { 2, "rr l"		   , &Instructions::Instr_16_0xCB1D_RR_L  			};
		m_16BitInstructionMap[0x1E] = { 2, "rr [hl]"	   , &Instructions::Instr_16_0xCB1E_RR_HL 			};
		m_16BitInstructionMap[0x1F] = { 2, "rr a"		   , &Instructions::Instr_16_0xCB1F_RR_A  			};
		m_16BitInstructionMap[0x20] = { 2, "sla b"		   , &Instructions::Instr_16_0xCB20_SLA_B 			};
		m_16BitInstructionMap[0x21] = { 2, "sla c"		   , &Instructions::Instr_16_0xCB21_SLA_C   		};
		m_16BitInstructionMap[0x22] = { 2, "sla d"		   , &Instructions::Instr_16_0xCB22_SLA_D   		};
		m_16BitInstructionMap[0x23] = { 2, "sla e"		   , &Instructions::Instr_16_0xCB23_SLA_E   		};
		m_16BitInstructionMap[0x24] = { 2, "sla h"		   , &Instructions::Instr_16_0xCB24_SLA_H   		};
		m_16BitInstructionMap[0x25] = { 2, "sla l"		   , &Instructions::Instr_16_0xCB25_SLA_L   		};
		m_16BitInstructionMap[0x26] = { 2, "sla [hl]"	   , &Instructions::Instr_16_0xCB26_SLA_HL  		};
		m_16BitInstructionMap[0x27] = { 2, "sla a"		   , &Instructions::Instr_16_0xCB27_SLA_A   		};
		m_16BitInstructionMap[0x28] = { 2, "sra b"		   , &Instructions::Instr_16_0xCB28_SRA_B   		};
		m_16BitInstructionMap[0x29] = { 2, "sra c"		   , &Instructions::Instr_16_0xCB29_SRA_C   		};
		m_16BitInstructionMap[0x2A] = { 2, "sra d"		   , &Instructions::Instr_16_0xCB2A_SRA_D   		};
		m_16BitInstructionMap[0x2B] = { 2, "sra e"		   , &Instructions::Instr_16_0xCB2B_SRA_E   		};
		m_16BitInstructionMap[0x2C] = { 2, "sra h"		   , &Instructions::Instr_16_0xCB2C_SRA_H   		};
		m_16BitInstructionMap[0x2D] = { 2, "sra l"		   , &Instructions::Instr_16_0xCB2D_SRA_L   		};
		m_16BitInstructionMap[0x2E] = { 2, "sra [hl]"	   , &Instructions::Instr_16_0xCB2E_SRA_HL  		};
		m_16BitInstructionMap[0x2F] = { 2, "sra a"		   , &Instructions::Instr_16_0xCB2F_SRA_A   		};
		m_16BitInstructionMap[0x30] = { 2, "swap b"		   , &Instructions::Instr_16_0xCB30_SWAP_B  		};
		m_16BitInstructionMap[0x31] = { 2, "swap c"		   , &Instructions::Instr_16_0xCB31_SWAP_C  		};
		m_16BitInstructionMap[0x32] = { 2, "swap d"		   , &Instructions::Instr_16_0xCB32_SWAP_D  		};
		m_16BitInstructionMap[0x33] = { 2, "swap e"		   , &Instructions::Instr_16_0xCB33_SWAP_E  		};
		m_16BitInstructionMap[0x34] = { 2, "swap h"		   , &Instructions::Instr_16_0xCB34_SWAP_H  		};
		m_16BitInstructionMap[0x35] = { 2, "swap l"		   , &Instructions::Instr_16_0xCB35_SWAP_L  		};
		m_16BitInstructionMap[0x36] = { 2, "swap [hl]"	   , &Instructions::Instr_16_0xCB36_SWAP_HL 		};
		m_16BitInstructionMap[0x37] = { 2, "swap a"		   , &Instructions::Instr_16_0xCB37_SWAP_A  		};
		m_16BitInstructionMap[0x38] = { 2, "srl b"		   , &Instructions::Instr_16_0xCB38_SRL_B   		};
		m_16BitInstructionMap[0x39] = { 2, "srl c"		   , &Instructions::Instr_16_0xCB39_SRL_C   		};
		m_16BitInstructionMap[0x3A] = { 2, "srl d"		   , &Instructions::Instr_16_0xCB3A_SRL_D   		};
		m_16BitInstructionMap[0x3B] = { 2, "srl e"		   , &Instructions::Instr_16_0xCB3B_SRL_E   		};
		m_16BitInstructionMap[0x3C] = { 2, "srl h"		   , &Instructions::Instr_16_0xCB3C_SRL_H   		};
		m_16BitInstructionMap[0x3D] = { 2, "srl l"		   , &Instructions::Instr_16_0xCB3D_SRL_L   		};
		m_16BitInstructionMap[0x3E] = { 2, "srl [hl]"	   , &Instructions::Instr_16_0xCB3E_SRL_HL  		};
		m_16BitInstructionMap[0x3F] = { 2, "srl a"		   , &Instructions::Instr_16_0xCB3F_SRL_A   		};
		m_16BitInstructionMap[0x40] = { 2, "bit 0,b"	   , &Instructions::Instr_16_0xCB40_BIT_0_B 		};
		m_16BitInstructionMap[0x41] = { 2, "bit 0,c"	   , &Instructions::Instr_16_0xCB41_BIT_0_C 		};
		m_16BitInstructionMap[0x42] = { 2, "bit 0,d"	   , &Instructions::Instr_16_0xCB42_BIT_0_D 		};
		m_16BitInstructionMap[0x43] = { 2, "bit 0,e"	   , &Instructions::Instr_16_0xCB43_BIT_0_E 		};
		m_16BitInstructionMap[0x44] = { 2, "bit 0,h"	   , &Instructions::Instr_16_0xCB44_BIT_0_H 		};
		m_16BitInstructionMap[0x45] = { 2, "bit 0,l"	   , &Instructions::Instr_16_0xCB45_BIT_0_L 		};
		m_16BitInstructionMap[0x46] = { 2, "bit 0,[hl]"	   , &Instructions::Instr_16_0xCB46_BIT_0_HL		};
		m_16BitInstructionMap[0x47] = { 2, "bit 0,a"	   , &Instructions::Instr_16_0xCB47_BIT_0_A 		};
		m_16BitInstructionMap[0x48] = { 2, "bit 1,b"	   , &Instructions::Instr_16_0xCB48_BIT_1_B 		};
		m_16BitInstructionMap[0x49] = { 2, "bit 1,c"	   , &Instructions::Instr_16_0xCB49_BIT_1_C 		};
		m_16BitInstructionMap[0x4A] = { 2, "bit 1,d"	   , &Instructions::Instr_16_0xCB4A_BIT_1_D 		};
		m_16BitInstructionMap[0x4B] = { 2, "bit 1,e"	   , &Instructions::Instr_16_0xCB4B_BIT_1_E 		};
		m_16BitInstructionMap[0x4C] = { 2, "bit 1,h"	   , &Instructions::Instr_16_0xCB4C_BIT_1_H 		};
		m_16BitInstructionMap[0x4D] = { 2, "bit 1,l"	   , &Instructions::Instr_16_0xCB4D_BIT_1_L 		};
		m_16BitInstructionMap[0x4E] = { 2, "bit 1,[hl]"	   , &Instructions::Instr_16_0xCB4E_BIT_1_HL		};
		m_16BitInstructionMap[0x4F] = { 2, "bit 1,a"	   , &Instructions::Instr_16_0xCB4F_BIT_1_A 		};
		m_16BitInstructionMap[0x50] = { 2, "bit 2,b"	   , &Instructions::Instr_16_0xCB50_BIT_2_B 		};
		m_16BitInstructionMap[0x51] = { 2, "bit 2,c"	   , &Instructions::Instr_16_0xCB51_BIT_2_C 		};
		m_16BitInstructionMap[0x52] = { 2, "bit 2,d"	   , &Instructions::Instr_16_0xCB52_BIT_2_D 		};
		m_16BitInstructionMap[0x53] = { 2, "bit 2,e"	   , &Instructions::Instr_16_0xCB53_BIT_2_E 		};
		m_16BitInstructionMap[0x54] = { 2, "bit 2,h"	   , &Instructions::Instr_16_0xCB54_BIT_2_H 		};
		m_16BitInstructionMap[0x55] = { 2, "bit 2,l"	   , &Instructions::Instr_16_0xCB55_BIT_2_L 		};
		m_16BitInstructionMap[0x56] = { 2, "bit 2,[hl]"	   , &Instructions::Instr_16_0xCB56_BIT_2_HL		};
		m_16BitInstructionMap[0x57] = { 2, "bit 2,a"	   , &Instructions::Instr_16_0xCB57_BIT_2_A 		};
		m_16BitInstructionMap[0x58] = { 2, "bit 3,b"	   , &Instructions::Instr_16_0xCB58_BIT_3_B 		};
		m_16BitInstructionMap[0x59] = { 2, "bit 3,c"	   , &Instructions::Instr_16_0xCB59_BIT_3_C 		};
		m_16BitInstructionMap[0x5A] = { 2, "bit 3,d"	   , &Instructions::Instr_16_0xCB5A_BIT_3_D 		};
		m_16BitInstructionMap[0x5B] = { 2, "bit 3,e"	   , &Instructions::Instr_16_0xCB5B_BIT_3_E 		};
		m_16BitInstructionMap[0x5C] = { 2, "bit 3,h"	   , &Instructions::Instr_16_0xCB5C_BIT_3_H 		};
		m_16BitInstructionMap[0x5D] = { 2, "bit 3,l"	   , &Instructions::Instr_16_0xCB5D_BIT_3_L 		};
		m_16BitInstructionMap[0x5E] = { 2, "bit 3,[hl]"	   , &Instructions::Instr_16_0xCB5E_BIT_3_HL		};
		m_16BitInstructionMap[0x5F] = { 2, "bit 3,a"	   , &Instructions::Instr_16_0xCB5F_BIT_3_A 		};
		m_16BitInstructionMap[0x60] = { 2, "bit 4,b"	   , &Instructions::Instr_16_0xCB60_BIT_4_B 		};
		m_16BitInstructionMap[0x61] = { 2, "bit 4,c"	   , &Instructions::Instr_16_0xCB61_BIT_4_C 		};
		m_16BitInstructionMap[0x62] = { 2, "bit 4,d"	   , &Instructions::Instr_16_0xCB62_BIT_4_D 		};
		m_16BitInstructionMap[0x63] = { 2, "bit 4,e"	   , &Instructions::Instr_16_0xCB63_BIT_4_E 		};
		m_16BitInstructionMap[0x64] = { 2, "bit 4,h"	   , &Instructions::Instr_16_0xCB64_BIT_4_H 		};
		m_16BitInstructionMap[0x65] = { 2, "bit 4,l"	   , &Instructions::Instr_16_0xCB65_BIT_4_L 		};
		m_16BitInstructionMap[0x66] = { 2, "bit 4,[hl]"	   , &Instructions::Instr_16_0xCB66_BIT_4_HL		};
		m_16BitInstructionMap[0x67] = { 2, "bit 4,a"	   , &Instructions::Instr_16_0xCB67_BIT_4_A 		};
		m_16BitInstructionMap[0x68] = { 2, "bit 5,b"	   , &Instructions::Instr_16_0xCB68_BIT_5_B 		};
		m_16BitInstructionMap[0x69] = { 2, "bit 5,c"	   , &Instructions::Instr_16_0xCB69_BIT_5_C 		};
		m_16BitInstructionMap[0x6A] = { 2, "bit 5,d"	   , &Instructions::Instr_16_0xCB6A_BIT_5_D 		};
		m_16BitInstructionMap[0x6B] = { 2, "bit 5,e"	   , &Instructions::Instr_16_0xCB6B_BIT_5_E 		};
		m_16BitInstructionMap[0x6C] = { 2, "bit 5,h"	   , &Instructions::Instr_16_0xCB6C_BIT_5_H 		};
		m_16BitInstructionMap[0x6D] = { 2, "bit 5,l"	   , &Instructions::Instr_16_0xCB6D_BIT_5_L 		};
		m_16BitInstructionMap[0x6E] = { 2, "bit 5,[hl]"	   , &Instructions::Instr_16_0xCB6E_BIT_5_HL		};
		m_16BitInstructionMap[0x6F] = { 2, "bit 5,a"	   , &Instructions::Instr_16_0xCB6F_BIT_5_A 		};
		m_16BitInstructionMap[0x70] = { 2, "bit 6,b"	   , &Instructions::Instr_16_0xCB70_BIT_6_B 		};
		m_16BitInstructionMap[0x71] = { 2, "bit 6,c"	   , &Instructions::Instr_16_0xCB71_BIT_6_C 		};
		m_16BitInstructionMap[0x72] = { 2, "bit 6,d"	   , &Instructions::Instr_16_0xCB72_BIT_6_D 		};
		m_16BitInstructionMap[0x73] = { 2, "bit 6,e"	   , &Instructions::Instr_16_0xCB73_BIT_6_E 		};
		m_16BitInstructionMap[0x74] = { 2, "bit 6,h"	   , &Instructions::Instr_16_0xCB74_BIT_6_H 		};
		m_16BitInstructionMap[0x75] = { 2, "bit 6,l"	   , &Instructions::Instr_16_0xCB75_BIT_6_L 		};
		m_16BitInstructionMap[0x76] = { 2, "bit 6,[hl]"	   , &Instructions::Instr_16_0xCB76_BIT_6_HL		};
		m_16BitInstructionMap[0x77] = { 2, "bit 6,a"	   , &Instructions::Instr_16_0xCB77_BIT_6_A 		};
		m_16BitInstructionMap[0x78] = { 2, "bit 7,b"	   , &Instructions::Instr_16_0xCB78_BIT_7_B 		};
		m_16BitInstructionMap[0x79] = { 2, "bit 7,c"	   , &Instructions::Instr_16_0xCB79_BIT_7_C 		};
		m_16BitInstructionMap[0x7A] = { 2, "bit 7,d"	   , &Instructions::Instr_16_0xCB7A_BIT_7_D 		};
		m_16BitInstructionMap[0x7B] = { 2, "bit 7,e"	   , &Instructions::Instr_16_0xCB7B_BIT_7_E 		};
		m_16BitInstructionMap[0x7C] = { 2, "bit 7,h"	   , &Instructions::Instr_16_0xCB7C_BIT_7_H 		};
		m_16BitInstructionMap[0x7D] = { 2, "bit 7,l"	   , &Instructions::Instr_16_0xCB7D_BIT_7_L 		};
		m_16BitInstructionMap[0x7E] = { 2, "bit 7,[hl]"	   , &Instructions::Instr_16_0xCB7E_BIT_7_HL		};
		m_16BitInstructionMap[0x7F] = { 2, "bit 7,a"	   , &Instructions::Instr_16_0xCB7F_BIT_7_A 		};
		m_16BitInstructionMap[0x80] = { 2, "res 0,b"	   , &Instructions::Instr_16_0xCB80_RES_0_B 		};
		m_16BitInstructionMap[0x81] = { 2, "res 0,c"	   , &Instructions::Instr_16_0xCB81_RES_0_C 		};
		m_16BitInstructionMap[0x82] = { 2, "res 0,d"	   , &Instructions::Instr_16_0xCB82_RES_0_D 		};
		m_16BitInstructionMap[0x83] = { 2, "res 0,e"	   , &Instructions::Instr_16_0xCB83_RES_0_E 		};
		m_16BitInstructionMap[0x84] = { 2, "res 0,h"	   , &Instructions::Instr_16_0xCB84_RES_0_H 		};
		m_16BitInstructionMap[0x85] = { 2, "res 0,l"	   , &Instructions::Instr_16_0xCB85_RES_0_L 		};
		m_16BitInstructionMap[0x86] = { 2, "res 0,[hl]"	   , &Instructions::Instr_16_0xCB86_RES_0_H 		};
		m_16BitInstructionMap[0x87] = { 2, "res 0,a"	   , &Instructions::Instr_16_0xCB87_RES_0_A 		};
		m_16BitInstructionMap[0x88] = { 2, "res 1,b"	   , &Instructions::Instr_16_0xCB88_RES_1_B 		};
		m_16BitInstructionMap[0x89] = { 2, "res 1,c"	   , &Instructions::Instr_16_0xCB89_RES_1_C 		};
		m_16BitInstructionMap[0x8A] = { 2, "res 1,d"	   , &Instructions::Instr_16_0xCB8A_RES_1_D 		};
		m_16BitInstructionMap[0x8B] = { 2, "res 1,e"	   , &Instructions::Instr_16_0xCB8B_RES_1_E 		};
		m_16BitInstructionMap[0x8C] = { 2, "res 1,h"	   , &Instructions::Instr_16_0xCB8C_RES_1_H 		};
		m_16BitInstructionMap[0x8D] = { 2, "res 1,l"	   , &Instructions::Instr_16_0xCB8D_RES_1_L 		};
		m_16BitInstructionMap[0x8E] = { 2, "res 1,[hl]"	   , &Instructions::Instr_16_0xCB8E_RES_1_HL		};
		m_16BitInstructionMap[0x8F] = { 2, "res 1,a"	   , &Instructions::Instr_16_0xCB8F_RES_1_A 		};
		m_16BitInstructionMap[0x90] = { 2, "res 2,b"	   , &Instructions::Instr_16_0xCB90_RES_2_B 		};
		m_16BitInstructionMap[0x91] = { 2, "res 2,c"	   , &Instructions::Instr_16_0xCB91_RES_2_C 		};
		m_16BitInstructionMap[0x92] = { 2, "res 2,d"	   , &Instructions::Instr_16_0xCB92_RES_2_D 		};
		m_16BitInstructionMap[0x93] = { 2, "res 2,e"	   , &Instructions::Instr_16_0xCB93_RES_2_E 		};
		m_16BitInstructionMap[0x94] = { 2, "res 2,h"	   , &Instructions::Instr_16_0xCB94_RES_2_H 		};
		m_16BitInstructionMap[0x95] = { 2, "res 2,l"	   , &Instructions::Instr_16_0xCB95_RES_2_L 		};
		m_16BitInstructionMap[0x96] = { 2, "res 2,[hl]"	   , &Instructions::Instr_16_0xCB96_RES_2_HL		};
		m_16BitInstructionMap[0x97] = { 2, "res 2,a"	   , &Instructions::Instr_16_0xCB97_RES_2_A 		};
		m_16BitInstructionMap[0x98] = { 2, "res 3,b"	   , &Instructions::Instr_16_0xCB98_RES_3_B 		};
		m_16BitInstructionMap[0x99] = { 2, "res 3,c"	   , &Instructions::Instr_16_0xCB99_RES_3_C 		};
		m_16BitInstructionMap[0x9A] = { 2, "res 3,d"	   , &Instructions::Instr_16_0xCB9A_RES_3_D 		};
		m_16BitInstructionMap[0x9B] = { 2, "res 3,e"	   , &Instructions::Instr_16_0xCB9B_RES_3_E 		};
		m_16BitInstructionMap[0x9C] = { 2, "res 3,h"	   , &Instructions::Instr_16_0xCB9C_RES_3_H 		};
		m_16BitInstructionMap[0x9D] = { 2, "res 3,l"	   , &Instructions::Instr_16_0xCB9D_RES_3_L 		};
		m_16BitInstructionMap[0x9E] = { 2, "res 3,[hl]"	   , &Instructions::Instr_16_0xCB9E_RES_3_HL		};
		m_16BitInstructionMap[0x9F] = { 2, "res 3,a"	   , &Instructions::Instr_16_0xCB9F_RES_3_A 		};
		m_16BitInstructionMap[0xA0] = { 2, "res 4,b"	   , &Instructions::Instr_16_0xCBA0_RES_4_B 		};
		m_16BitInstructionMap[0xA1] = { 2, "res 4,c"	   , &Instructions::Instr_16_0xCBA1_RES_4_C 		};
		m_16BitInstructionMap[0xA2] = { 2, "res 4,d"	   , &Instructions::Instr_16_0xCBA2_RES_4_D 		};
		m_16BitInstructionMap[0xA3] = { 2, "res 4,e"	   , &Instructions::Instr_16_0xCBA3_RES_4_E 		};
		m_16BitInstructionMap[0xA4] = { 2, "res 4,h"	   , &Instructions::Instr_16_0xCBA4_RES_4_H 		};
		m_16BitInstructionMap[0xA5] = { 2, "res 4,l"	   , &Instructions::Instr_16_0xCBA5_RES_4_L 		};
		m_16BitInstructionMap[0xA6] = { 2, "res 4,[hl]"	   , &Instructions::Instr_16_0xCBA6_RES_4_HL		};
		m_16BitInstructionMap[0xA7] = { 2, "res 4,a"	   , &Instructions::Instr_16_0xCBA7_RES_4_A 		};
		m_16BitInstructionMap[0xA8] = { 2, "res 5,b"	   , &Instructions::Instr_16_0xCBA8_RES_5_B 		};
		m_16BitInstructionMap[0xA9] = { 2, "res 5,c"	   , &Instructions::Instr_16_0xCBA9_RES_5_C 		};
		m_16BitInstructionMap[0xAA] = { 2, "res 5,d"	   , &Instructions::Instr_16_0xCBAA_RES_5_D 		};
		m_16BitInstructionMap[0xAB] = { 2, "res 5,e"	   , &Instructions::Instr_16_0xCBAB_RES_5_E 		};
		m_16BitInstructionMap[0xAC] = { 2, "res 5,h"	   , &Instructions::Instr_16_0xCBAC_RES_5_H 		};
		m_16BitInstructionMap[0xAD] = { 2, "res 5,l"	   , &Instructions::Instr_16_0xCBAD_RES_5_L 		};
		m_16BitInstructionMap[0xAE] = { 2, "res 5,[hl]"	   , &Instructions::Instr_16_0xCBAE_RES_5_HL		};
		m_16BitInstructionMap[0xAF] = { 2, "res 5,a"	   , &Instructions::Instr_16_0xCBAF_RES_5_A 		};
		m_16BitInstructionMap[0xB0] = { 2, "res 6,b"	   , &Instructions::Instr_16_0xCBB0_RES_6_B 		};
		m_16BitInstructionMap[0xB1] = { 2, "res 6,c"	   , &Instructions::Instr_16_0xCBB1_RES_6_C 		};
		m_16BitInstructionMap[0xB2] = { 2, "res 6,d"	   , &Instructions::Instr_16_0xCBB2_RES_6_D 		};
		m_16BitInstructionMap[0xB3] = { 2, "res 6,e"	   , &Instructions::Instr_16_0xCBB3_RES_6_E 		};
		m_16BitInstructionMap[0xB4] = { 2, "res 6,h"	   , &Instructions::Instr_16_0xCBB4_RES_6_H 		};
		m_16BitInstructionMap[0xB5] = { 2, "res 6,l"	   , &Instructions::Instr_16_0xCBB5_RES_6_L 		};
		m_16BitInstructionMap[0xB6] = { 2, "res 6,[hl]"	   , &Instructions::Instr_16_0xCBB6_RES_6_HL		};
		m_16BitInstructionMap[0xB7] = { 2, "res 6,a"	   , &Instructions::Instr_16_0xCBB7_RES_6_A 		};
		m_16BitInstructionMap[0xB8] = { 2, "res 7,b"	   , &Instructions::Instr_16_0xCBB8_RES_7_B 		};
		m_16BitInstructionMap[0xB9] = { 2, "res 7,c"	   , &Instructions::Instr_16_0xCBB9_RES_7_C 		};
		m_16BitInstructionMap[0xBA] = { 2, "res 7,d"	   , &Instructions::Instr_16_0xCBBA_RES_7_D 		};
		m_16BitInstructionMap[0xBB] = { 2, "res 7,e"	   , &Instructions::Instr_16_0xCBBB_RES_7_E 		};
		m_16BitInstructionMap[0xBC] = { 2, "res 7,h"	   , &Instructions::Instr_16_0xCBBC_RES_7_H 		};
		m_16BitInstructionMap[0xBD] = { 2, "res 7,l"	   , &Instructions::Instr_16_0xCBBD_RES_7_L 		};
		m_16BitInstructionMap[0xBE] = { 2, "res 7,[hl]"	   , &Instructions::Instr_16_0xCBBE_RES_7_HL		};
		m_16BitInstructionMap[0xBF] = { 2, "res 7,a"	   , &Instructions::Instr_16_0xCBBF_RES_7_A 		};
		m_16BitInstructionMap[0xC0] = { 2, "set 0,b"	   , &Instructions::Instr_16_0xCBC0_SET_0_B 		};
		m_16BitInstructionMap[0xC1] = { 2, "set 0,c"	   , &Instructions::Instr_16_0xCBC1_SET_0_C 		};
		m_16BitInstructionMap[0xC2] = { 2, "set 0,d"	   , &Instructions::Instr_16_0xCBC2_SET_0_D 		};
		m_16BitInstructionMap[0xC3] = { 2, "set 0,e"	   , &Instructions::Instr_16_0xCBC3_SET_0_E 		};
		m_16BitInstructionMap[0xC4] = { 2, "set 0,h"	   , &Instructions::Instr_16_0xCBC4_SET_0_H 		};
		m_16BitInstructionMap[0xC5] = { 2, "set 0,l"	   , &Instructions::Instr_16_0xCBC5_SET_0_L 		};
		m_16BitInstructionMap[0xC6] = { 2, "set 0,[hl]"	   , &Instructions::Instr_16_0xCBC6_SET_0_HL		};
		m_16BitInstructionMap[0xC7] = { 2, "set 0,a"	   , &Instructions::Instr_16_0xCBC7_SET_0_A 		};
		m_16BitInstructionMap[0xC8] = { 2, "set 1,b"	   , &Instructions::Instr_16_0xCBC8_SET_1_B 		};
		m_16BitInstructionMap[0xC9] = { 2, "set 1,c"	   , &Instructions::Instr_16_0xCBC9_SET_1_C 		};
		m_16BitInstructionMap[0xCA] = { 2, "set 1,d"	   , &Instructions::Instr_16_0xCBCA_SET_1_D 		};
		m_16BitInstructionMap[0xCB] = { 2, "set 1,e"	   , &Instructions::Instr_16_0xCBCB_SET_1_E 		};
		m_16BitInstructionMap[0xCC] = { 2, "set 1,h"	   , &Instructions::Instr_16_0xCBCC_SET_1_H 		};
		m_16BitInstructionMap[0xCD] = { 2, "set 1,l"	   , &Instructions::Instr_16_0xCBCD_SET_1_L 		};
		m_16BitInstructionMap[0xCE] = { 2, "set 1,[hl]"	   , &Instructions::Instr_16_0xCBCE_SET_1_HL		};
		m_16BitInstructionMap[0xCF] = { 2, "set 1,a"	   , &Instructions::Instr_16_0xCBCF_SET_1_A 		};
		m_16BitInstructionMap[0xD0] = { 2, "set 2,b"	   , &Instructions::Instr_16_0xCBD0_SET_2_B 		};
		m_16BitInstructionMap[0xD1] = { 2, "set 2,c"	   , &Instructions::Instr_16_0xCBD1_SET_2_C 		};
		m_16BitInstructionMap[0xD2] = { 2, "set 2,d"	   , &Instructions::Instr_16_0xCBD2_SET_2_D 		};
		m_16BitInstructionMap[0xD3] = { 2, "set 2,e"	   , &Instructions::Instr_16_0xCBD3_SET_2_E 		};
		m_16BitInstructionMap[0xD4] = { 2, "set 2,h"	   , &Instructions::Instr_16_0xCBD4_SET_2_H 		};
		m_16BitInstructionMap[0xD5] = { 2, "set 2,l"	   , &Instructions::Instr_16_0xCBD5_SET_2_L 		};
		m_16BitInstructionMap[0xD6] = { 2, "set 2,[hl]"	   , &Instructions::Instr_16_0xCBD6_SET_2_HL		};
		m_16BitInstructionMap[0xD7] = { 2, "set 2,a"	   , &Instructions::Instr_16_0xCBD7_SET_2_A 		};
		m_16BitInstructionMap[0xD8] = { 2, "set 3,b"	   , &Instructions::Instr_16_0xCBD8_SET_3_B 		};
		m_16BitInstructionMap[0xD9] = { 2, "set 3,c"	   , &Instructions::Instr_16_0xCBD9_SET_3_C 		};
		m_16BitInstructionMap[0xDA] = { 2, "set 3,d"	   , &Instructions::Instr_16_0xCBDA_SET_3_D 		};
		m_16BitInstructionMap[0xDB] = { 2, "set 3,e"	   , &Instructions::Instr_16_0xCBDB_SET_3_E 		};
		m_16BitInstructionMap[0xDC] = { 2, "set 3,h"	   , &Instructions::Instr_16_0xCBDC_SET_3_H 		};
		m_16BitInstructionMap[0xDD] = { 2, "set 3,l"	   , &Instructions::Instr_16_0xCBDD_SET_3_L 		};
		m_16BitInstructionMap[0xDE] = { 2, "set 3,[hl]"	   , &Instructions::Instr_16_0xCBDE_SET_3_HL		};
		m_16BitInstructionMap[0xDF] = { 2, "set 3,a"	   , &Instructions::Instr_16_0xCBDF_SET_3_A 		};
		m_16BitInstructionMap[0xE0] = { 2, "set 4,b"	   , &Instructions::Instr_16_0xCBE0_SET_4_B 		};
		m_16BitInstructionMap[0xE1] = { 2, "set 4,c"	   , &Instructions::Instr_16_0xCBE1_SET_4_C 		};
		m_16BitInstructionMap[0xE2] = { 2, "set 4,d"	   , &Instructions::Instr_16_0xCBE2_SET_4_D 		};
		m_16BitInstructionMap[0xE3] = { 2, "set 4,e"	   , &Instructions::Instr_16_0xCBE3_SET_4_E 		};
		m_16BitInstructionMap[0xE4] = { 2, "set 4,h"	   , &Instructions::Instr_16_0xCBE4_SET_4_H 		};
		m_16BitInstructionMap[0xE5] = { 2, "set 4,l"	   , &Instructions::Instr_16_0xCBE5_SET_4_L 		};
		m_16BitInstructionMap[0xE6] = { 2, "set 4,[hl]"	   , &Instructions::Instr_16_0xCBE6_SET_4_HL		};
		m_16BitInstructionMap[0xE7] = { 2, "set 4,a"	   , &Instructions::Instr_16_0xCBE7_SET_4_A 		};
		m_16BitInstructionMap[0xE8] = { 2, "set 5,b"	   , &Instructions::Instr_16_0xCBE8_SET_5_B 		};
		m_16BitInstructionMap[0xE9] = { 2, "set 5,c"	   , &Instructions::Instr_16_0xCBE9_SET_5_C 		};
		m_16BitInstructionMap[0xEA] = { 2, "set 5,d"	   , &Instructions::Instr_16_0xCBEA_SET_5_D 		};
		m_16BitInstructionMap[0xEB] = { 2, "set 5,e"	   , &Instructions::Instr_16_0xCBEB_SET_5_E 		};
		m_16BitInstructionMap[0xEC] = { 2, "set 5,h"	   , &Instructions::Instr_16_0xCBEC_SET_5_H 		};
		m_16BitInstructionMap[0xED] = { 2, "set 5,l"	   , &Instructions::Instr_16_0xCBED_SET_5_L 		};
		m_16BitInstructionMap[0xEE] = { 2, "set 5,[hl]"	   , &Instructions::Instr_16_0xCBEE_SET_5_HL		};
		m_16BitInstructionMap[0xEF] = { 2, "set 5,a"	   , &Instructions::Instr_16_0xCBEF_SET_5_A 		};
		m_16BitInstructionMap[0xF0] = { 2, "set 6,b"	   , &Instructions::Instr_16_0xCBF0_SET_6_B 		};
		m_16BitInstructionMap[0xF1] = { 2, "set 6,c"	   , &Instructions::Instr_16_0xCBF1_SET_6_C 		};
		m_16BitInstructionMap[0xF2] = { 2, "set 6,d"	   , &Instructions::Instr_16_0xCBF2_SET_6_D 		};
		m_16BitInstructionMap[0xF3] = { 2, "set 6,e"	   , &Instructions::Instr_16_0xCBF3_SET_6_E 		};
		m_16BitInstructionMap[0xF4] = { 2, "set 6,h"	   , &Instructions::Instr_16_0xCBF4_SET_6_H 		};
		m_16BitInstructionMap[0xF5] = { 2, "set 6,l"	   , &Instructions::Instr_16_0xCBF5_SET_6_L 		};
		m_16BitInstructionMap[0xF6] = { 2, "set 6,[hl]"	   , &Instructions::Instr_16_0xCBF6_SET_6_HL		};
		m_16BitInstructionMap[0xF7] = { 2, "set 6,a"	   , &Instructions::Instr_16_0xCBF7_SET_6_A 		};
		m_16BitInstructionMap[0xF8] = { 2, "set 7,b"	   , &Instructions::Instr_16_0xCBF8_SET_7_B 		};
		m_16BitInstructionMap[0xF9] = { 2, "set 7,c"	   , &Instructions::Instr_16_0xCBF9_SET_7_C 		};
		m_16BitInstructionMap[0xFA] = { 2, "set 7,d"	   , &Instructions::Instr_16_0xCBFA_SET_7_D 		};
		m_16BitInstructionMap[0xFB] = { 2, "set 7,e"	   , &Instructions::Instr_16_0xCBFB_SET_7_E 		};
		m_16BitInstructionMap[0xFC] = { 2, "set 7,h"	   , &Instructions::Instr_16_0xCBFC_SET_7_H 		};
		m_16BitInstructionMap[0xFD] = { 2, "set 7,l"	   , &Instructions::Instr_16_0xCBFD_SET_7_L 		};
		m_16BitInstructionMap[0xFE] = { 2, "set 7,[hl]"	   , &Instructions::Instr_16_0xCBFE_SET_7_HL		};
		m_16BitInstructionMap[0xFF] = { 2, "set 7,a"       , &Instructions::Instr_16_0xCBFF_SET_7_A 		};
	}

	InstructionSet::~InstructionSet() {}
}