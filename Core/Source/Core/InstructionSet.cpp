
#include "InstructionSet.h"

namespace Core
{
	InstructionSet::InstructionSet()
	{
		m_InstructionMap[0x00] = { 1, "nop" 			 };
		m_InstructionMap[0x01] = { 3, "ld bc,%hu" 		 };
		m_InstructionMap[0x02] = { 1, "ld [bc],a" 		 };
		m_InstructionMap[0x03] = { 1, "inc bc" 			 };
		m_InstructionMap[0x04] = { 1, "inc b" 			 };
		m_InstructionMap[0x05] = { 1, "dec b" 			 };
		m_InstructionMap[0x06] = { 2, "ld b,%hhu" 		 };
		m_InstructionMap[0x07] = { 1, "rlca" 			 };
		m_InstructionMap[0x08] = { 3, "ld [$%04x],sp" 	 };
		m_InstructionMap[0x09] = { 1, "add hl,bc" 		 };
		m_InstructionMap[0x0A] = { 1, "ld a,[bc]" 		 };
		m_InstructionMap[0x0B] = { 1, "dec bc" 			 };
		m_InstructionMap[0x0C] = { 1, "inc c" 			 };
		m_InstructionMap[0x0D] = { 1, "dec c" 			 };
		m_InstructionMap[0x0E] = { 2, "ld c,%hhu" 		 };
		m_InstructionMap[0x0F] = { 1, "rrca" 			 };
		m_InstructionMap[0x10] = { 1, "stop" 			 };
		m_InstructionMap[0x11] = { 3, "ld de,%hu" 		 };
		m_InstructionMap[0x12] = { 1, "ld [de],a" 		 };
		m_InstructionMap[0x13] = { 1, "inc de" 			 };
		m_InstructionMap[0x14] = { 1, "inc d" 			 };
		m_InstructionMap[0x15] = { 1, "dec d" 			 };
		m_InstructionMap[0x16] = { 2, "ld d,%hhu" 		 };
		m_InstructionMap[0x17] = { 1, "rla" 			 };
		m_InstructionMap[0x18] = { 2, "jr %+hhd" 		 };
		m_InstructionMap[0x19] = { 1, "add hl,de" 		 };
		m_InstructionMap[0x1A] = { 1, "ld a,[de]" 		 };
		m_InstructionMap[0x1B] = { 1, "dec de" 			 };
		m_InstructionMap[0x1C] = { 1, "inc e" 			 };
		m_InstructionMap[0x1D] = { 1, "dec e" 			 };
		m_InstructionMap[0x1E] = { 2, "ld e,%hhu" 		 };
		m_InstructionMap[0x1F] = { 1, "rra" 			 };
		m_InstructionMap[0x20] = { 2, "jr nz,%+hhd" 	 };
		m_InstructionMap[0x21] = { 3, "ld hl,%hu" 		 };
		m_InstructionMap[0x22] = { 1, "ld [hl+],a" 		 };
		m_InstructionMap[0x23] = { 1, "inc hl" 			 };
		m_InstructionMap[0x24] = { 1, "inc h" 			 };
		m_InstructionMap[0x25] = { 1, "dec h" 			 };
		m_InstructionMap[0x26] = { 2, "ld h,%hhu" 		 };
		m_InstructionMap[0x27] = { 1, "daa" 			 };
		m_InstructionMap[0x28] = { 2, "jr z,%+hhd" 		 };
		m_InstructionMap[0x29] = { 1, "add hl,hl" 		 };
		m_InstructionMap[0x2A] = { 1, "ld a,[hl+]" 		 };
		m_InstructionMap[0x2B] = { 1, "dec hl" 			 };
		m_InstructionMap[0x2C] = { 1, "inc l" 			 };
		m_InstructionMap[0x2D] = { 1, "dec l" 			 };
		m_InstructionMap[0x2E] = { 2, "ld l,%hhu" 		 };
		m_InstructionMap[0x2F] = { 1, "cpl" 			 };
		m_InstructionMap[0x30] = { 2, "jr nc,%+hhd" 	 };
		m_InstructionMap[0x31] = { 3, "ld sp,%hu" 		 };
		m_InstructionMap[0x32] = { 1, "ld [hl-],a" 		 };
		m_InstructionMap[0x33] = { 1, "inc sp" 			 };
		m_InstructionMap[0x34] = { 1, "inc [hl]" 		 };
		m_InstructionMap[0x35] = { 1, "dec [hl]" 		 };
		m_InstructionMap[0x36] = { 2, "ld [hl],%hhu" 	 };
		m_InstructionMap[0x37] = { 1, "scf" 			 };
		m_InstructionMap[0x38] = { 2, "jr c,%+hhd" 		 };
		m_InstructionMap[0x39] = { 1, "add hl,sp" 		 };
		m_InstructionMap[0x3A] = { 1, "ld a,[hl-]" 		 };
		m_InstructionMap[0x3B] = { 1, "dec sp" 			 };
		m_InstructionMap[0x3C] = { 1, "inc a" 			 };
		m_InstructionMap[0x3D] = { 1, "dec a" 			 };
		m_InstructionMap[0x3E] = { 2, "ld a,%hhu" 		 };
		m_InstructionMap[0x3F] = { 1, "ccf" 			 };
		m_InstructionMap[0x40] = { 1, "ld b,b" 			 };
		m_InstructionMap[0x41] = { 1, "ld b,c" 			 };
		m_InstructionMap[0x42] = { 1, "ld b,d" 			 };
		m_InstructionMap[0x43] = { 1, "ld b,e" 			 };
		m_InstructionMap[0x44] = { 1, "ld b,h" 			 };
		m_InstructionMap[0x45] = { 1, "ld b,l" 			 };
		m_InstructionMap[0x46] = { 1, "ld b,[hl]" 		 };
		m_InstructionMap[0x47] = { 1, "ld b,a" 			 };
		m_InstructionMap[0x48] = { 1, "ld c,b" 			 };
		m_InstructionMap[0x49] = { 1, "ld c,c" 			 };
		m_InstructionMap[0x4A] = { 1, "ld c,d" 			 };
		m_InstructionMap[0x4B] = { 1, "ld c,e" 			 };
		m_InstructionMap[0x4C] = { 1, "ld c,h" 			 };
		m_InstructionMap[0x4D] = { 1, "ld c,l" 			 };
		m_InstructionMap[0x4E] = { 1, "ld c,[hl]" 		 };
		m_InstructionMap[0x4F] = { 1, "ld c,a" 			 };
		m_InstructionMap[0x50] = { 1, "ld d,b" 			 };
		m_InstructionMap[0x51] = { 1, "ld d,c" 			 };
		m_InstructionMap[0x52] = { 1, "ld d,d" 			 };
		m_InstructionMap[0x53] = { 1, "ld d,e" 			 };
		m_InstructionMap[0x54] = { 1, "ld d,h" 			 };
		m_InstructionMap[0x55] = { 1, "ld d,l" 			 };
		m_InstructionMap[0x56] = { 1, "ld d,[hl]" 		 };
		m_InstructionMap[0x57] = { 1, "ld d,a" 			 };
		m_InstructionMap[0x58] = { 1, "ld e,b" 			 };
		m_InstructionMap[0x59] = { 1, "ld e,c" 			 };
		m_InstructionMap[0x5A] = { 1, "ld e,d" 			 };
		m_InstructionMap[0x5B] = { 1, "ld e,e" 			 };
		m_InstructionMap[0x5C] = { 1, "ld e,h" 			 };
		m_InstructionMap[0x5D] = { 1, "ld e,l" 			 };
		m_InstructionMap[0x5E] = { 1, "ld e,[hl]" 		 };
		m_InstructionMap[0x5F] = { 1, "ld e,a" 			 };
		m_InstructionMap[0x60] = { 1, "ld h,b" 			 };
		m_InstructionMap[0x61] = { 1, "ld h,c" 			 };
		m_InstructionMap[0x62] = { 1, "ld h,d" 			 };
		m_InstructionMap[0x63] = { 1, "ld h,e" 			 };
		m_InstructionMap[0x64] = { 1, "ld h,h" 			 };
		m_InstructionMap[0x65] = { 1, "ld h,l" 			 };
		m_InstructionMap[0x66] = { 1, "ld h,[hl]" 		 };
		m_InstructionMap[0x67] = { 1, "ld h,a" 			 };
		m_InstructionMap[0x68] = { 1, "ld l,b" 			 };
		m_InstructionMap[0x69] = { 1, "ld l,c" 			 };
		m_InstructionMap[0x6A] = { 1, "ld l,d" 			 };
		m_InstructionMap[0x6B] = { 1, "ld l,e" 			 };
		m_InstructionMap[0x6C] = { 1, "ld l,h" 			 };
		m_InstructionMap[0x6D] = { 1, "ld l,l" 			 };
		m_InstructionMap[0x6E] = { 1, "ld l,[hl]" 		 };
		m_InstructionMap[0x6F] = { 1, "ld l,a" 			 };
		m_InstructionMap[0x70] = { 1, "ld [hl],b" 		 };
		m_InstructionMap[0x71] = { 1, "ld [hl],c" 		 };
		m_InstructionMap[0x72] = { 1, "ld [hl],d" 		 };
		m_InstructionMap[0x73] = { 1, "ld [hl],e" 		 };
		m_InstructionMap[0x74] = { 1, "ld [hl],h" 		 };
		m_InstructionMap[0x75] = { 1, "ld [hl],l" 		 };
		m_InstructionMap[0x76] = { 1, "halt" 			 };
		m_InstructionMap[0x77] = { 1, "ld [hl],a" 		 };
		m_InstructionMap[0x78] = { 1, "ld a,b" 			 };
		m_InstructionMap[0x79] = { 1, "ld a,c" 			 };
		m_InstructionMap[0x7A] = { 1, "ld a,d" 			 };
		m_InstructionMap[0x7B] = { 1, "ld a,e" 			 };
		m_InstructionMap[0x7C] = { 1, "ld a,h" 			 };
		m_InstructionMap[0x7D] = { 1, "ld a,l" 			 };
		m_InstructionMap[0x7E] = { 1, "ld a,[hl]" 		 };
		m_InstructionMap[0x7F] = { 1, "ld a,a" 			 };
		m_InstructionMap[0x80] = { 1, "add a,b" 		 };
		m_InstructionMap[0x81] = { 1, "add a,c" 		 };
		m_InstructionMap[0x82] = { 1, "add a,d" 		 };
		m_InstructionMap[0x83] = { 1, "add a,e" 		 };
		m_InstructionMap[0x84] = { 1, "add a,h" 		 };
		m_InstructionMap[0x85] = { 1, "add a,l" 		 };
		m_InstructionMap[0x86] = { 1, "add a,[hl]" 		 };
		m_InstructionMap[0x87] = { 1, "add a,a" 		 };
		m_InstructionMap[0x88] = { 1, "adc a,b" 		 };
		m_InstructionMap[0x89] = { 1, "adc a,c" 		 };
		m_InstructionMap[0x8A] = { 1, "adc a,d" 		 };
		m_InstructionMap[0x8B] = { 1, "adc a,e" 		 };
		m_InstructionMap[0x8C] = { 1, "adc a,h" 		 };
		m_InstructionMap[0x8D] = { 1, "adc a,l" 		 };
		m_InstructionMap[0x8E] = { 1, "adc a,[hl]" 		 };
		m_InstructionMap[0x8F] = { 1, "adc a,a" 		 };
		m_InstructionMap[0x90] = { 1, "sub a,b" 		 };
		m_InstructionMap[0x91] = { 1, "sub a,c" 		 };
		m_InstructionMap[0x92] = { 1, "sub a,d" 		 };
		m_InstructionMap[0x93] = { 1, "sub a,e" 		 };
		m_InstructionMap[0x94] = { 1, "sub a,h" 		 };
		m_InstructionMap[0x95] = { 1, "sub a,l" 		 };
		m_InstructionMap[0x96] = { 1, "sub a,[hl]" 		 };
		m_InstructionMap[0x97] = { 1, "sub a,a" 		 };
		m_InstructionMap[0x98] = { 1, "sbc a,b" 		 };
		m_InstructionMap[0x99] = { 1, "sbc a,c" 		 };
		m_InstructionMap[0x9A] = { 1, "sbc a,d" 		 };
		m_InstructionMap[0x9B] = { 1, "sbc a,e" 		 };
		m_InstructionMap[0x9C] = { 1, "sbc a,h" 		 };
		m_InstructionMap[0x9D] = { 1, "sbc a,l" 		 };
		m_InstructionMap[0x9E] = { 1, "sbc a,[hl]" 		 };
		m_InstructionMap[0x9F] = { 1, "sbc a,a" 		 };
		m_InstructionMap[0xA0] = { 1, "and a,b" 		 };
		m_InstructionMap[0xA1] = { 1, "and a,c" 		 };
		m_InstructionMap[0xA2] = { 1, "and a,d" 		 };
		m_InstructionMap[0xA3] = { 1, "and a,e" 		 };
		m_InstructionMap[0xA4] = { 1, "and a,h" 		 };
		m_InstructionMap[0xA5] = { 1, "and a,l" 		 };
		m_InstructionMap[0xA6] = { 1, "and a,[hl]" 		 };
		m_InstructionMap[0xA7] = { 1, "and a,a" 		 };
		m_InstructionMap[0xA8] = { 1, "xor a,b" 		 };
		m_InstructionMap[0xA9] = { 1, "xor a,c" 		 };
		m_InstructionMap[0xAA] = { 1, "xor a,d" 		 };
		m_InstructionMap[0xAB] = { 1, "xor a,e" 		 };
		m_InstructionMap[0xAC] = { 1, "xor a,h" 		 };
		m_InstructionMap[0xAD] = { 1, "xor a,l" 		 };
		m_InstructionMap[0xAE] = { 1, "xor a,[hl]" 		 };
		m_InstructionMap[0xAF] = { 1, "xor a,a" 		 };
		m_InstructionMap[0xB0] = { 1, "or a,b" 			 };
		m_InstructionMap[0xB1] = { 1, "or a,c" 			 };
		m_InstructionMap[0xB2] = { 1, "or a,d" 			 };
		m_InstructionMap[0xB3] = { 1, "or a,e" 			 };
		m_InstructionMap[0xB4] = { 1, "or a,h" 			 };
		m_InstructionMap[0xB5] = { 1, "or a,l" 			 };
		m_InstructionMap[0xB6] = { 1, "or a,[hl]" 		 };
		m_InstructionMap[0xB7] = { 1, "or a,a" 			 };
		m_InstructionMap[0xB8] = { 1, "cp a,b" 			 };
		m_InstructionMap[0xB9] = { 1, "cp a,c" 			 };
		m_InstructionMap[0xBA] = { 1, "cp a,d" 			 };
		m_InstructionMap[0xBB] = { 1, "cp a,e" 			 };
		m_InstructionMap[0xBC] = { 1, "cp a,h" 			 };
		m_InstructionMap[0xBD] = { 1, "cp a,l" 			 };
		m_InstructionMap[0xBE] = { 1, "cp a,[hl]" 		 };
		m_InstructionMap[0xBF] = { 1, "cp a,a" 			 };
		m_InstructionMap[0xC0] = { 1, "ret nz" 			 };
		m_InstructionMap[0xC1] = { 1, "pop bc" 			 };
		m_InstructionMap[0xC2] = { 3, "jp nz,$%04hx" 	 };
		m_InstructionMap[0xC3] = { 3, "jp $%04hx" 		 };
		m_InstructionMap[0xC4] = { 3, "call nz,$%04hx" 	 };
		m_InstructionMap[0xC5] = { 1, "push bc" 		 };
		m_InstructionMap[0xC6] = { 2, "add a,%hhu" 		 };
		m_InstructionMap[0xC7] = { 1, "rst $00" 		 };
		m_InstructionMap[0xC8] = { 1, "ret z" 			 };
		m_InstructionMap[0xC9] = { 1, "ret" 			 };
		m_InstructionMap[0xCA] = { 3, "jp z,$%04hx" 	 };
		m_InstructionMap[0xCB] = { 2, "INVALID", 		 };
		m_InstructionMap[0xCC] = { 3, "call z,$%04hx" 	 };
		m_InstructionMap[0xCD] = { 3, "call $%04hx" 	 };
		m_InstructionMap[0xCE] = { 2, "adc a,%hhu" 		 };
		m_InstructionMap[0xCF] = { 1, "rst $08" 		 };
		m_InstructionMap[0xD0] = { 1, "ret nc" 			 };
		m_InstructionMap[0xD1] = { 1, "pop de" 			 };
		m_InstructionMap[0xD2] = { 3, "jp nc,$%04hx" 	 };
		m_InstructionMap[0xD3] = { 1, "INVALID", 		 };
		m_InstructionMap[0xD4] = { 3, "call nc,$%04hx" 	 };
		m_InstructionMap[0xD5] = { 1, "push de" 		 };
		m_InstructionMap[0xD6] = { 2, "sub a,%hhu" 		 };
		m_InstructionMap[0xD7] = { 1, "rst $10" 		 };
		m_InstructionMap[0xD8] = { 1, "ret c" 			 };
		m_InstructionMap[0xD9] = { 1, "reti" 			 };
		m_InstructionMap[0xDA] = { 3, "jp c,$%04hx" 	 };
		m_InstructionMap[0xDB] = { 1, "INVALID", 		 };
		m_InstructionMap[0xDC] = { 3, "call c,$%04hx" 	 };
		m_InstructionMap[0xDD] = { 1, "INVALID", 		 };
		m_InstructionMap[0xDE] = { 2, "sbc a,%hhu" 		 };
		m_InstructionMap[0xDF] = { 1, "rst $18" 		 };
		m_InstructionMap[0xE0] = { 2, "ldh [$ff%02hhx],a"};
		m_InstructionMap[0xE1] = { 1, "pop hl" 			 };
		m_InstructionMap[0xE2] = { 1, "ld [$ff00+c],a" 	 };
		m_InstructionMap[0xE3] = { 1, "INVALID", 		 };
		m_InstructionMap[0xE4] = { 1, "INVALID", 		 };
		m_InstructionMap[0xE5] = { 1, "push hl" 		 };
		m_InstructionMap[0xE6] = { 2, "and a,%hhu" 		 };
		m_InstructionMap[0xE7] = { 1, "rst $20" 		 };
		m_InstructionMap[0xE8] = { 2, "add sp,%+hhd" 	 };
		m_InstructionMap[0xE9] = { 1, "jp hl" 			 };
		m_InstructionMap[0xEA] = { 3, "ld [$%04hx],a" 	 };
		m_InstructionMap[0xEB] = { 1, "INVALID", 		 };
		m_InstructionMap[0xEC] = { 1, "INVALID", 		 };
		m_InstructionMap[0xED] = { 1, "INVALID", 		 };
		m_InstructionMap[0xEE] = { 2, "xor a,%hhu" 		 };
		m_InstructionMap[0xEF] = { 1, "rst $28" 		 };
		m_InstructionMap[0xF0] = { 2, "ldh a,[$ff%02hhx]"};
		m_InstructionMap[0xF1] = { 1, "pop af" 			 };
		m_InstructionMap[0xF2] = { 1, "ld a,[$ff00+c]" 	 };
		m_InstructionMap[0xF3] = { 1, "di" 				 };
		m_InstructionMap[0xF4] = { 1, "INVALID", 		 };
		m_InstructionMap[0xF5] = { 1, "push af" 		 };
		m_InstructionMap[0xF6] = { 2, "or a,%hhu" 		 };
		m_InstructionMap[0xF7] = { 1, "rst $30" 		 };
		m_InstructionMap[0xF8] = { 2, "ld hl,sp%+hhd" 	 };
		m_InstructionMap[0xF9] = { 1, "ld sp,hl" 		 };
		m_InstructionMap[0xFA] = { 3, "ld a,[$%04hx]" 	 };
		m_InstructionMap[0xFB] = { 1, "ei" 				 };
		m_InstructionMap[0xFC] = { 1, "INVALID", 		 };
		m_InstructionMap[0xFD] = { 1, "INVALID", 		 };
		m_InstructionMap[0xFE] = { 2, "cp a,%hhu" 		 };
		m_InstructionMap[0xFF] = { 1, "rst $38" 		 };


		m_16BitInstructionMap[0x00] = { 2, "rlc b"		};
		m_16BitInstructionMap[0x01] = { 2, "rlc c"		};
		m_16BitInstructionMap[0x02] = { 2, "rlc d"		};
		m_16BitInstructionMap[0x03] = { 2, "rlc e"		};
		m_16BitInstructionMap[0x04] = { 2, "rlc h"		};
		m_16BitInstructionMap[0x05] = { 2, "rlc l"		};
		m_16BitInstructionMap[0x06] = { 2, "rlc [hl]"	};
		m_16BitInstructionMap[0x07] = { 2, "rlc a"		};
		m_16BitInstructionMap[0x08] = { 2, "rrc b"		};
		m_16BitInstructionMap[0x09] = { 2, "rrc c"		};
		m_16BitInstructionMap[0x0A] = { 2, "rrc d"		};
		m_16BitInstructionMap[0x0B] = { 2, "rrc e"		};
		m_16BitInstructionMap[0x0C] = { 2, "rrc h"		};
		m_16BitInstructionMap[0x0D] = { 2, "rrc l"		};
		m_16BitInstructionMap[0x0E] = { 2, "rrc [hl]"	};
		m_16BitInstructionMap[0x0F] = { 2, "rrc a"		};
		m_16BitInstructionMap[0x10] = { 2, "rl b"		};
		m_16BitInstructionMap[0x11] = { 2, "rl c"		};
		m_16BitInstructionMap[0x12] = { 2, "rl d"		};
		m_16BitInstructionMap[0x13] = { 2, "rl e"		};
		m_16BitInstructionMap[0x14] = { 2, "rl h"		};
		m_16BitInstructionMap[0x15] = { 2, "rl l"		};
		m_16BitInstructionMap[0x16] = { 2, "rl [hl]"	};
		m_16BitInstructionMap[0x17] = { 2, "rl a"		};
		m_16BitInstructionMap[0x18] = { 2, "rr b"		};
		m_16BitInstructionMap[0x19] = { 2, "rr c"		};
		m_16BitInstructionMap[0x1A] = { 2, "rr d"		};
		m_16BitInstructionMap[0x1B] = { 2, "rr e"		};
		m_16BitInstructionMap[0x1C] = { 2, "rr h"		};
		m_16BitInstructionMap[0x1D] = { 2, "rr l"		};
		m_16BitInstructionMap[0x1E] = { 2, "rr [hl]"	};
		m_16BitInstructionMap[0x1F] = { 2, "rr a"		};
		m_16BitInstructionMap[0x20] = { 2, "sla b"		};
		m_16BitInstructionMap[0x21] = { 2, "sla c"		};
		m_16BitInstructionMap[0x22] = { 2, "sla d"		};
		m_16BitInstructionMap[0x23] = { 2, "sla e"		};
		m_16BitInstructionMap[0x24] = { 2, "sla h"		};
		m_16BitInstructionMap[0x25] = { 2, "sla l"		};
		m_16BitInstructionMap[0x26] = { 2, "sla [hl]"	};
		m_16BitInstructionMap[0x27] = { 2, "sla a"		};
		m_16BitInstructionMap[0x28] = { 2, "sra b"		};
		m_16BitInstructionMap[0x29] = { 2, "sra c"		};
		m_16BitInstructionMap[0x2A] = { 2, "sra d"		};
		m_16BitInstructionMap[0x2B] = { 2, "sra e"		};
		m_16BitInstructionMap[0x2C] = { 2, "sra h"		};
		m_16BitInstructionMap[0x2D] = { 2, "sra l"		};
		m_16BitInstructionMap[0x2E] = { 2, "sra [hl]"	};
		m_16BitInstructionMap[0x2F] = { 2, "sra a"		};
		m_16BitInstructionMap[0x30] = { 2, "swap b"		};
		m_16BitInstructionMap[0x31] = { 2, "swap c"		};
		m_16BitInstructionMap[0x32] = { 2, "swap d"		};
		m_16BitInstructionMap[0x33] = { 2, "swap e"		};
		m_16BitInstructionMap[0x34] = { 2, "swap h"		};
		m_16BitInstructionMap[0x35] = { 2, "swap l"		};
		m_16BitInstructionMap[0x36] = { 2, "swap [hl]"	};
		m_16BitInstructionMap[0x37] = { 2, "swap a"		};
		m_16BitInstructionMap[0x38] = { 2, "srl b"		};
		m_16BitInstructionMap[0x39] = { 2, "srl c"		};
		m_16BitInstructionMap[0x3A] = { 2, "srl d"		};
		m_16BitInstructionMap[0x3B] = { 2, "srl e"		};
		m_16BitInstructionMap[0x3C] = { 2, "srl h"		};
		m_16BitInstructionMap[0x3D] = { 2, "srl l"		};
		m_16BitInstructionMap[0x3E] = { 2, "srl [hl]"	};
		m_16BitInstructionMap[0x3F] = { 2, "srl a"		};
		m_16BitInstructionMap[0x40] = { 2, "bit 0,b"	};
		m_16BitInstructionMap[0x41] = { 2, "bit 0,c"	};
		m_16BitInstructionMap[0x42] = { 2, "bit 0,d"	};
		m_16BitInstructionMap[0x43] = { 2, "bit 0,e"	};
		m_16BitInstructionMap[0x44] = { 2, "bit 0,h"	};
		m_16BitInstructionMap[0x45] = { 2, "bit 0,l"	};
		m_16BitInstructionMap[0x46] = { 2, "bit 0,[hl]"	};
		m_16BitInstructionMap[0x47] = { 2, "bit 0,a"	};
		m_16BitInstructionMap[0x48] = { 2, "bit 1,b"	};
		m_16BitInstructionMap[0x49] = { 2, "bit 1,c"	};
		m_16BitInstructionMap[0x4A] = { 2, "bit 1,d"	};
		m_16BitInstructionMap[0x4B] = { 2, "bit 1,e"	};
		m_16BitInstructionMap[0x4C] = { 2, "bit 1,h"	};
		m_16BitInstructionMap[0x4D] = { 2, "bit 1,l"	};
		m_16BitInstructionMap[0x4E] = { 2, "bit 1,[hl]"	};
		m_16BitInstructionMap[0x4F] = { 2, "bit 1,a"	};
		m_16BitInstructionMap[0x50] = { 2, "bit 2,b"	};
		m_16BitInstructionMap[0x51] = { 2, "bit 2,c"	};
		m_16BitInstructionMap[0x52] = { 2, "bit 2,d"	};
		m_16BitInstructionMap[0x53] = { 2, "bit 2,e"	};
		m_16BitInstructionMap[0x54] = { 2, "bit 2,h"	};
		m_16BitInstructionMap[0x55] = { 2, "bit 2,l"	};
		m_16BitInstructionMap[0x56] = { 2, "bit 2,[hl]"	};
		m_16BitInstructionMap[0x57] = { 2, "bit 2,a"	};
		m_16BitInstructionMap[0x58] = { 2, "bit 3,b"	};
		m_16BitInstructionMap[0x59] = { 2, "bit 3,c"	};
		m_16BitInstructionMap[0x5A] = { 2, "bit 3,d"	};
		m_16BitInstructionMap[0x5B] = { 2, "bit 3,e"	};
		m_16BitInstructionMap[0x5C] = { 2, "bit 3,h"	};
		m_16BitInstructionMap[0x5D] = { 2, "bit 3,l"	};
		m_16BitInstructionMap[0x5E] = { 2, "bit 3,[hl]"	};
		m_16BitInstructionMap[0x5F] = { 2, "bit 3,a"	};
		m_16BitInstructionMap[0x60] = { 2, "bit 4,b"	};
		m_16BitInstructionMap[0x61] = { 2, "bit 4,c"	};
		m_16BitInstructionMap[0x62] = { 2, "bit 4,d"	};
		m_16BitInstructionMap[0x63] = { 2, "bit 4,e"	};
		m_16BitInstructionMap[0x64] = { 2, "bit 4,h"	};
		m_16BitInstructionMap[0x65] = { 2, "bit 4,l"	};
		m_16BitInstructionMap[0x66] = { 2, "bit 4,[hl]"	};
		m_16BitInstructionMap[0x67] = { 2, "bit 4,a"	};
		m_16BitInstructionMap[0x68] = { 2, "bit 5,b"	};
		m_16BitInstructionMap[0x69] = { 2, "bit 5,c"	};
		m_16BitInstructionMap[0x6A] = { 2, "bit 5,d"	};
		m_16BitInstructionMap[0x6B] = { 2, "bit 5,e"	};
		m_16BitInstructionMap[0x6C] = { 2, "bit 5,h"	};
		m_16BitInstructionMap[0x6D] = { 2, "bit 5,l"	};
		m_16BitInstructionMap[0x6E] = { 2, "bit 5,[hl]"	};
		m_16BitInstructionMap[0x6F] = { 2, "bit 5,a"	};
		m_16BitInstructionMap[0x70] = { 2, "bit 6,b"	};
		m_16BitInstructionMap[0x71] = { 2, "bit 6,c"	};
		m_16BitInstructionMap[0x72] = { 2, "bit 6,d"	};
		m_16BitInstructionMap[0x73] = { 2, "bit 6,e"	};
		m_16BitInstructionMap[0x74] = { 2, "bit 6,h"	};
		m_16BitInstructionMap[0x75] = { 2, "bit 6,l"	};
		m_16BitInstructionMap[0x76] = { 2, "bit 6,[hl]"	};
		m_16BitInstructionMap[0x77] = { 2, "bit 6,a"	};
		m_16BitInstructionMap[0x78] = { 2, "bit 7,b"	};
		m_16BitInstructionMap[0x79] = { 2, "bit 7,c"	};
		m_16BitInstructionMap[0x7A] = { 2, "bit 7,d"	};
		m_16BitInstructionMap[0x7B] = { 2, "bit 7,e"	};
		m_16BitInstructionMap[0x7C] = { 2, "bit 7,h"	};
		m_16BitInstructionMap[0x7D] = { 2, "bit 7,l"	};
		m_16BitInstructionMap[0x7E] = { 2, "bit 7,[hl]"	};
		m_16BitInstructionMap[0x7F] = { 2, "bit 7,a"	};
		m_16BitInstructionMap[0x80] = { 2, "res 0,b"	};
		m_16BitInstructionMap[0x81] = { 2, "res 0,c"	};
		m_16BitInstructionMap[0x82] = { 2, "res 0,d"	};
		m_16BitInstructionMap[0x83] = { 2, "res 0,e"	};
		m_16BitInstructionMap[0x84] = { 2, "res 0,h"	};
		m_16BitInstructionMap[0x85] = { 2, "res 0,l"	};
		m_16BitInstructionMap[0x86] = { 2, "res 0,[hl]"	};
		m_16BitInstructionMap[0x87] = { 2, "res 0,a"	};
		m_16BitInstructionMap[0x88] = { 2, "res 1,b"	};
		m_16BitInstructionMap[0x89] = { 2, "res 1,c"	};
		m_16BitInstructionMap[0x8A] = { 2, "res 1,d"	};
		m_16BitInstructionMap[0x8B] = { 2, "res 1,e"	};
		m_16BitInstructionMap[0x8C] = { 2, "res 1,h"	};
		m_16BitInstructionMap[0x8D] = { 2, "res 1,l"	};
		m_16BitInstructionMap[0x8E] = { 2, "res 1,[hl]"	};
		m_16BitInstructionMap[0x8F] = { 2, "res 1,a"	};
		m_16BitInstructionMap[0x90] = { 2, "res 2,b"	};
		m_16BitInstructionMap[0x91] = { 2, "res 2,c"	};
		m_16BitInstructionMap[0x92] = { 2, "res 2,d"	};
		m_16BitInstructionMap[0x93] = { 2, "res 2,e"	};
		m_16BitInstructionMap[0x94] = { 2, "res 2,h"	};
		m_16BitInstructionMap[0x95] = { 2, "res 2,l"	};
		m_16BitInstructionMap[0x96] = { 2, "res 2,[hl]"	};
		m_16BitInstructionMap[0x97] = { 2, "res 2,a"	};
		m_16BitInstructionMap[0x98] = { 2, "res 3,b"	};
		m_16BitInstructionMap[0x99] = { 2, "res 3,c"	};
		m_16BitInstructionMap[0x9A] = { 2, "res 3,d"	};
		m_16BitInstructionMap[0x9B] = { 2, "res 3,e"	};
		m_16BitInstructionMap[0x9C] = { 2, "res 3,h"	};
		m_16BitInstructionMap[0x9D] = { 2, "res 3,l"	};
		m_16BitInstructionMap[0x9E] = { 2, "res 3,[hl]"	};
		m_16BitInstructionMap[0x9F] = { 2, "res 3,a"	};
		m_16BitInstructionMap[0xA0] = { 2, "res 4,b"	};
		m_16BitInstructionMap[0xA1] = { 2, "res 4,c"	};
		m_16BitInstructionMap[0xA2] = { 2, "res 4,d"	};
		m_16BitInstructionMap[0xA3] = { 2, "res 4,e"	};
		m_16BitInstructionMap[0xA4] = { 2, "res 4,h"	};
		m_16BitInstructionMap[0xA5] = { 2, "res 4,l"	};
		m_16BitInstructionMap[0xA6] = { 2, "res 4,[hl]"	};
		m_16BitInstructionMap[0xA7] = { 2, "res 4,a"	};
		m_16BitInstructionMap[0xA8] = { 2, "res 5,b"	};
		m_16BitInstructionMap[0xA9] = { 2, "res 5,c"	};
		m_16BitInstructionMap[0xAA] = { 2, "res 5,d"	};
		m_16BitInstructionMap[0xAB] = { 2, "res 5,e"	};
		m_16BitInstructionMap[0xAC] = { 2, "res 5,h"	};
		m_16BitInstructionMap[0xAD] = { 2, "res 5,l"	};
		m_16BitInstructionMap[0xAE] = { 2, "res 5,[hl]"	};
		m_16BitInstructionMap[0xAF] = { 2, "res 5,a"	};
		m_16BitInstructionMap[0xB0] = { 2, "res 6,b"	};
		m_16BitInstructionMap[0xB1] = { 2, "res 6,c"	};
		m_16BitInstructionMap[0xB2] = { 2, "res 6,d"	};
		m_16BitInstructionMap[0xB3] = { 2, "res 6,e"	};
		m_16BitInstructionMap[0xB4] = { 2, "res 6,h"	};
		m_16BitInstructionMap[0xB5] = { 2, "res 6,l"	};
		m_16BitInstructionMap[0xB6] = { 2, "res 6,[hl]"	};
		m_16BitInstructionMap[0xB7] = { 2, "res 6,a"	};
		m_16BitInstructionMap[0xB8] = { 2, "res 7,b"	};
		m_16BitInstructionMap[0xB9] = { 2, "res 7,c"	};
		m_16BitInstructionMap[0xBA] = { 2, "res 7,d"	};
		m_16BitInstructionMap[0xBB] = { 2, "res 7,e"	};
		m_16BitInstructionMap[0xBC] = { 2, "res 7,h"	};
		m_16BitInstructionMap[0xBD] = { 2, "res 7,l"	};
		m_16BitInstructionMap[0xBE] = { 2, "res 7,[hl]"	};
		m_16BitInstructionMap[0xBF] = { 2, "res 7,a"	};
		m_16BitInstructionMap[0xC0] = { 2, "set 0,b"	};
		m_16BitInstructionMap[0xC1] = { 2, "set 0,c"	};
		m_16BitInstructionMap[0xC2] = { 2, "set 0,d"	};
		m_16BitInstructionMap[0xC3] = { 2, "set 0,e"	};
		m_16BitInstructionMap[0xC4] = { 2, "set 0,h"	};
		m_16BitInstructionMap[0xC5] = { 2, "set 0,l"	};
		m_16BitInstructionMap[0xC6] = { 2, "set 0,[hl]"	};
		m_16BitInstructionMap[0xC7] = { 2, "set 0,a"	};
		m_16BitInstructionMap[0xC8] = { 2, "set 1,b"	};
		m_16BitInstructionMap[0xC9] = { 2, "set 1,c"	};
		m_16BitInstructionMap[0xCA] = { 2, "set 1,d"	};
		m_16BitInstructionMap[0xCB] = { 2, "set 1,e"	};
		m_16BitInstructionMap[0xCC] = { 2, "set 1,h"	};
		m_16BitInstructionMap[0xCD] = { 2, "set 1,l"	};
		m_16BitInstructionMap[0xCE] = { 2, "set 1,[hl]"	};
		m_16BitInstructionMap[0xCF] = { 2, "set 1,a"	};
		m_16BitInstructionMap[0xD0] = { 2, "set 2,b"	};
		m_16BitInstructionMap[0xD1] = { 2, "set 2,c"	};
		m_16BitInstructionMap[0xD2] = { 2, "set 2,d"	};
		m_16BitInstructionMap[0xD3] = { 2, "set 2,e"	};
		m_16BitInstructionMap[0xD4] = { 2, "set 2,h"	};
		m_16BitInstructionMap[0xD5] = { 2, "set 2,l"	};
		m_16BitInstructionMap[0xD6] = { 2, "set 2,[hl]"	};
		m_16BitInstructionMap[0xD7] = { 2, "set 2,a"	};
		m_16BitInstructionMap[0xD8] = { 2, "set 3,b"	};
		m_16BitInstructionMap[0xD9] = { 2, "set 3,c"	};
		m_16BitInstructionMap[0xDA] = { 2, "set 3,d"	};
		m_16BitInstructionMap[0xDB] = { 2, "set 3,e"	};
		m_16BitInstructionMap[0xDC] = { 2, "set 3,h"	};
		m_16BitInstructionMap[0xDD] = { 2, "set 3,l"	};
		m_16BitInstructionMap[0xDE] = { 2, "set 3,[hl]"	};
		m_16BitInstructionMap[0xDF] = { 2, "set 3,a"	};
		m_16BitInstructionMap[0xE0] = { 2, "set 4,b"	};
		m_16BitInstructionMap[0xE1] = { 2, "set 4,c"	};
		m_16BitInstructionMap[0xE2] = { 2, "set 4,d"	};
		m_16BitInstructionMap[0xE3] = { 2, "set 4,e"	};
		m_16BitInstructionMap[0xE4] = { 2, "set 4,h"	};
		m_16BitInstructionMap[0xE5] = { 2, "set 4,l"	};
		m_16BitInstructionMap[0xE6] = { 2, "set 4,[hl]"	};
		m_16BitInstructionMap[0xE7] = { 2, "set 4,a"	};
		m_16BitInstructionMap[0xE8] = { 2, "set 5,b"	};
		m_16BitInstructionMap[0xE9] = { 2, "set 5,c"	};
		m_16BitInstructionMap[0xEA] = { 2, "set 5,d"	};
		m_16BitInstructionMap[0xEB] = { 2, "set 5,e"	};
		m_16BitInstructionMap[0xEC] = { 2, "set 5,h"	};
		m_16BitInstructionMap[0xED] = { 2, "set 5,l"	};
		m_16BitInstructionMap[0xEE] = { 2, "set 5,[hl]"	};
		m_16BitInstructionMap[0xEF] = { 2, "set 5,a"	};
		m_16BitInstructionMap[0xF0] = { 2, "set 6,b"	};
		m_16BitInstructionMap[0xF1] = { 2, "set 6,c"	};
		m_16BitInstructionMap[0xF2] = { 2, "set 6,d"	};
		m_16BitInstructionMap[0xF3] = { 2, "set 6,e"	};
		m_16BitInstructionMap[0xF4] = { 2, "set 6,h"	};
		m_16BitInstructionMap[0xF5] = { 2, "set 6,l"	};
		m_16BitInstructionMap[0xF6] = { 2, "set 6,[hl]"	};
		m_16BitInstructionMap[0xF7] = { 2, "set 6,a"	};
		m_16BitInstructionMap[0xF8] = { 2, "set 7,b"	};
		m_16BitInstructionMap[0xF9] = { 2, "set 7,c"	};
		m_16BitInstructionMap[0xFA] = { 2, "set 7,d"	};
		m_16BitInstructionMap[0xFB] = { 2, "set 7,e"	};
		m_16BitInstructionMap[0xFC] = { 2, "set 7,h"	};
		m_16BitInstructionMap[0xFD] = { 2, "set 7,l"	};
		m_16BitInstructionMap[0xFE] = { 2, "set 7,[hl]"	};
		m_16BitInstructionMap[0xFF] = { 2, "set 7,a"    };

	}

	InstructionSet::~InstructionSet() {}
}